define({ "api": [  {    "type": "post",    "url": "/oauth2/token",    "title": "Client credentials",    "version": "0.0.1",    "group": "Authentication",    "name": "GrantTypeClientCredentials",    "permission": [      {        "name": "Public"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "allowedValues": [              "client_credentials"            ],            "optional": false,            "field": "grant_type",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "size": "32",            "optional": false,            "field": "client_id",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "size": "32",            "optional": false,            "field": "client_secret",            "description": ""          }        ]      }    },    "success": {      "fields": {        "200 OK": [          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "access_token",            "description": "<p>Access token value.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "expires_in",            "description": "<p>Access token expire value in seconds.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "scope",            "description": "<p>Unused.</p>"          },          {            "group": "200 OK",            "type": "String",            "allowedValues": [              "Bearer"            ],            "optional": false,            "field": "token_type",            "description": "<p>Access token type.</p>"          }        ]      },      "examples": [        {          "title": "Example Response",          "content": "HTTP/1.1 200 OK\n{\n    \"access_token\": \"bc8018d4bc8441bc1d79aac3f1d06ffe6368fe87\",\n    \"expires_in\": 86400,\n    \"scope\": null,\n    \"token_type\": \"Bearer\"\n}",          "type": "json"        }      ]    },    "filename": "controllers/TokenController.php",    "groupTitle": "Authentication",    "error": {      "fields": {        "400 Bad Request": [          {            "group": "400 Bad Request",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "400 Bad Request",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "400 Bad Request",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "400 Bad Request",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ]      }    }  },  {    "type": "post",    "url": "/oauth2/token",    "title": "Password credentials",    "version": "0.0.1",    "group": "Authentication",    "name": "GrantTypePassword",    "permission": [      {        "name": "Public"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "allowedValues": [              "password"            ],            "optional": false,            "field": "grant_type",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "username",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "size": "32",            "optional": false,            "field": "client_id",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "size": "32",            "optional": false,            "field": "client_secret",            "description": ""          }        ]      }    },    "success": {      "fields": {        "200 OK": [          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "access_token",            "description": "<p>Access token value.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "expires_in",            "description": "<p>Access token expire value in seconds.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "refresh_token",            "description": "<p>Refresh token value.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "scope",            "description": "<p>Unused.</p>"          },          {            "group": "200 OK",            "type": "String",            "allowedValues": [              "Bearer"            ],            "optional": false,            "field": "token_type",            "description": "<p>Access token type.</p>"          }        ]      },      "examples": [        {          "title": "Example Response",          "content": "HTTP/1.1 200 OK\n{\n    \"access_token\": \"bc8018d4bc8441bc1d79aac3f1d06ffe6368fe87\",\n    \"expires_in\": 86400,\n    \"refresh_token\": \"de6ca59ea494b5707b4ec71e8c90c03c0cc76502\",\n    \"scope\": null,\n    \"token_type\": \"Bearer\"\n}",          "type": "json"        }      ]    },    "filename": "controllers/TokenController.php",    "groupTitle": "Authentication",    "error": {      "fields": {        "400 Bad Request": [          {            "group": "400 Bad Request",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "400 Bad Request",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "400 Bad Request",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "400 Bad Request",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ]      }    }  },  {    "type": "post",    "url": "/oauth2/token",    "title": "Refresh token",    "version": "0.0.1",    "group": "Authentication",    "name": "GrantTypeRefreshToken",    "permission": [      {        "name": "Public"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "allowedValues": [              "refresh_token"            ],            "optional": false,            "field": "grant_type",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "size": "32",            "optional": false,            "field": "refresh_token",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "size": "32",            "optional": false,            "field": "client_id",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "size": "32",            "optional": false,            "field": "client_secret",            "description": ""          }        ]      }    },    "success": {      "fields": {        "200 OK": [          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "access_token",            "description": "<p>Access token value.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "expires_in",            "description": "<p>Access token expire value in seconds.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "refresh_token",            "description": "<p>Refresh token value.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "scope",            "description": "<p>Unused.</p>"          },          {            "group": "200 OK",            "type": "String",            "allowedValues": [              "Bearer"            ],            "optional": false,            "field": "token_type",            "description": "<p>Access token type.</p>"          }        ]      },      "examples": [        {          "title": "Example Response",          "content": "HTTP/1.1 200 OK\n{\n    \"access_token\": \"bc8018d4bc8441bc1d79aac3f1d06ffe6368fe87\",\n    \"expires_in\": 86400,\n    \"refresh_token\": \"de6ca59ea494b5707b4ec71e8c90c03c0cc76502\",\n    \"scope\": null,\n    \"token_type\": \"Bearer\"\n}",          "type": "json"        }      ]    },    "filename": "controllers/TokenController.php",    "groupTitle": "Authentication",    "error": {      "fields": {        "400 Bad Request": [          {            "group": "400 Bad Request",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "400 Bad Request",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "400 Bad Request",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "400 Bad Request",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ]      }    }  },  {    "type": "post",    "url": "/categories/:category_id/subscriptions",    "title": "Subscribe to category",    "description": "<p><code>422 Data Validation Error</code> occurs if the category object does not exists, the category object type is <code>anatomy</code> or the category object is already subscribed by the authorized user.</p>",    "version": "0.0.1",    "group": "Categories",    "name": "CreateSubscription",    "permission": [      {        "name": "User",        "title": "Authorized user.",        "description": "<p>Authorization can be done with using either <code>access_token</code> query string or <code>Authorization</code> header with <strong>Bearer</strong> token.</p>"      }    ],    "parameter": {      "fields": {        "Url Parameters": [          {            "group": "Url Parameters",            "type": "Integer",            "optional": false,            "field": "category_id",            "description": "<p>Id number of the category object.</p>"          }        ]      }    },    "error": {      "examples": [        {          "title": "Example Validation Error Response",          "content": "HTTP/1.1 422 Data Validation Failed.\n[\n    {\n        \"message\": \"Category Id does not exist.\",\n        \"field\": \"category_id\"\n    }\n]",          "type": "json"        }      ],      "fields": {        "401 Authorization Error": [          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "422 Data Validation Error": [          {            "group": "422 Data Validation Error",            "type": "Object[]",            "optional": false,            "field": "error",            "description": "<p>Data validation error object.</p>"          },          {            "group": "422 Data Validation Error",            "type": "String",            "optional": false,            "field": "error.message",            "description": "<p>Message of the error.</p>"          },          {            "group": "422 Data Validation Error",            "type": "String",            "optional": false,            "field": "error.field",            "description": "<p>Field name of the error.</p>"          }        ],        "500 Server Error": [          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ]      }    },    "filename": "controllers/SubscriptionController.php",    "groupTitle": "Categories",    "success": {      "fields": {        "201 Created": [          {            "group": "201 Created",            "type": "Integer",            "optional": false,            "field": "id",            "description": "<p>Id number of the object.</p>"          },          {            "group": "201 Created",            "type": "Date",            "optional": false,            "field": "created_at",            "description": "<p>Creation date and time of the object in <em>ISO 8601</em> format.</p>"          }        ]      },      "examples": [        {          "title": "Example Response",          "content": "HTTP/1.1 201 Created\n{\n    \"id\": 1,\n    \"created_at\": \"2015-02-13T15:26:55+00:00\"\n}",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "/categories/:category_id/subscriptions",    "title": "Unsubscribe from category",    "description": "<p><code>404 Not Found</code> occurs if the category object is not subscribed by the authorized user.</p>",    "version": "0.0.1",    "group": "Categories",    "name": "DeleteSubscription",    "permission": [      {        "name": "Owner",        "title": "Owner user of the object.",        "description": "<p>If the authorized user is not owner of the requested object 404 error occurs.</p>"      }    ],    "parameter": {      "fields": {        "Url Parameters": [          {            "group": "Url Parameters",            "type": "Integer",            "optional": false,            "field": "category_id",            "description": "<p>Id number of the category object.</p>"          }        ]      }    },    "filename": "controllers/SubscriptionController.php",    "groupTitle": "Categories",    "success": {      "fields": {        "204 No Content": [          {            "group": "204 No Content",            "optional": false,            "field": "N/A",            "description": "<p>N/A</p>"          }        ]      }    },    "error": {      "fields": {        "401 Authorization Error": [          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "404 Not Found": [          {            "group": "404 Not Found",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "404 Not Found",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "404 Not Found",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "404 Not Found",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "500 Server Error": [          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/categories",    "title": "List of categories",    "description": "<p>If the category object type is <code>speciality</code></p> <ul> <li><code>has_children</code> is always <code>false</code></li> <li><code>children</code> is always <code>null</code></li> </ul> <p>If the category object type is <code>anatomy</code></p> <ul> <li><code>has_children</code> is always <code>true</code></li> <li><code>cover</code> is always <code>null</code></li> <li><code>subscribed</code> is always <code>false</code></li> </ul>",    "version": "0.0.1",    "group": "Categories",    "name": "IndexCategory",    "permission": [      {        "name": "User",        "title": "Authorized user.",        "description": "<p>Authorization can be done with using either <code>access_token</code> query string or <code>Authorization</code> header with <strong>Bearer</strong> token.</p>"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "data",            "description": "<p>List of the categories.</p>"          },          {            "group": "Success 200",            "type": "Integer",            "optional": false,            "field": "data.id",            "description": "<p>Id number of the category.</p>"          },          {            "group": "Success 200",            "type": "String",            "allowedValues": [              "anatomy",              "speciality"            ],            "optional": false,            "field": "data.type",            "description": "<p>Type of the category.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.title",            "description": "<p>Title of the category.</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data.cover",            "description": "<p>Cover image of the category.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.cover.url",            "description": "<p>Url of the category cover image.</p>"          },          {            "group": "Success 200",            "type": "Integer",            "optional": false,            "field": "data.cover.width",            "description": "<p>Width of the category cover image.</p>"          },          {            "group": "Success 200",            "type": "Integer",            "optional": false,            "field": "data.cover.height",            "description": "<p>Height of the category cover image.</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "data.subscribed",            "description": "<p>Specify if the category is subscribed by the authorized user.</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "data.has_children",            "description": "<p>Specify if the category has child nodes.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "data.children",            "description": "<p>List of the category children.</p>"          },          {            "group": "Success 200",            "type": "Integer",            "optional": false,            "field": "data.children.id",            "description": "<p>Id number of the child category.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.children.title",            "description": "<p>Title of the child category.</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data.children.cover",            "description": "<p>Cover image of the child category.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.children.cover.url",            "description": "<p>Url of the child category cover image.</p>"          },          {            "group": "Success 200",            "type": "Integer",            "optional": false,            "field": "data.children.cover.width",            "description": "<p>Width of the child category cover image.</p>"          },          {            "group": "Success 200",            "type": "Integer",            "optional": false,            "field": "data.children.cover.height",            "description": "<p>Height of the child category cover image.</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "data.children.subscribed",            "description": "<p>Specify if the child category is subscribed by the authorized user.</p>"          }        ]      },      "examples": [        {          "title": "Example Response",          "content": "HTTP/1.1 200 OK\n{\n    \"data\": [\n        {\n            \"id\": 1,\n            \"type\": \"anatomy\",\n            \"title\": \"Baş\",\n            \"subscribed\": false,\n            \"cover\": null,\n            \"has_children\": true,\n            \"children\": [\n                {\n                    \"id\": 11,\n                    \"title\": \"Burun\",\n                    \"subscribed\": true,\n                    \"cover\": {\n                        \"url\": \"https://api.example.com/uploads/categories/l4qbdknkoij_jtkwvevo0re_vnjn_pnp_320.jpg\",\n                        \"width\": 320,\n                        \"height\": 80\n                    }\n                }\n            ]\n        }\n    ]\n}",          "type": "json"        }      ]    },    "filename": "controllers/CategoryController.php",    "groupTitle": "Categories",    "error": {      "fields": {        "401 Authorization Error": [          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "500 Server Error": [          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/categories/:id/media",    "title": "List of category media",    "version": "0.0.1",    "group": "Categories",    "name": "MediaCategory",    "permission": [      {        "name": "User",        "title": "Authorized user.",        "description": "<p>Authorization can be done with using either <code>access_token</code> query string or <code>Authorization</code> header with <strong>Bearer</strong> token.</p>"      }    ],    "parameter": {      "fields": {        "Url Parameters": [          {            "group": "Url Parameters",            "type": "Integer",            "optional": false,            "field": "id",            "description": "<p>Id number of the category.</p>"          }        ],        "Query String Parameters": [          {            "group": "Query String Parameters",            "type": "Integer",            "optional": true,            "field": "page",            "description": "<p>Page number.</p>"          },          {            "group": "Query String Parameters",            "type": "Integer",            "optional": true,            "field": "per_page",            "description": "<p>Number of the records per page.</p>"          }        ]      }    },    "filename": "controllers/CategoryController.php",    "groupTitle": "Categories",    "success": {      "fields": {        "200 OK": [          {            "group": "200 OK",            "type": "Object[]",            "optional": false,            "field": "data",            "description": "<p>List of media.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.id",            "description": "<p>Id number of media media.</p>"          },          {            "group": "200 OK",            "type": "String",            "allowedValues": [              "single",              "multiple"            ],            "optional": false,            "field": "data.type",            "description": "<p>Type of the media.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.caption",            "description": "<p>Caption of the media.</p>"          },          {            "group": "200 OK",            "type": "Boolean",            "optional": false,            "field": "data.favorited",            "description": "<p>Specify if the media is favorited by the user.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.public_id",            "description": "<p>Public id of the media.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.public_url",            "description": "<p>Public (sharing) url of the media.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.user",            "description": "<p>User of the media.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.user.id",            "description": "<p>Id number of the user.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.user.username",            "description": "<p>Username of the user.</p>"          },          {            "group": "200 OK",            "type": "Boolean",            "optional": false,            "field": "data.user.verified",            "description": "<p>Specify if the user is verified.</p>"          },          {            "group": "200 OK",            "type": "Boolean",            "optional": false,            "field": "data.user.following",            "description": "<p>Specify if the user is followed.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.user.real_name",            "description": "<p>Real name of the user.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.user.screen_name",            "description": "<p>Screen name of the user.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.user.screen_speciality",            "description": "<p>Screen speciality of the user.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.user.picture",            "description": "<p>Picture of the user (<code>null</code> if profile picture is not uploaded).</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.user.picture.url",            "description": "<p>Url of the profile picture.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.user.picture.width",            "description": "<p>Width of the profile picture.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.user.picture.height",            "description": "<p>Height of the profile picture.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.user.profession",            "description": "<p>Profession of the user.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.user.profession.id",            "description": "<p>Id number of the profession.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.user.profession.title",            "description": "<p>Title of the profession.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.user.speciality",            "description": "<p>Speciality of the user.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.user.speciality.id",            "description": "<p>Id number of the speciality.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.user.speciality.title",            "description": "<p>Title of the speciality.</p>"          },          {            "group": "200 OK",            "type": "Object[]",            "optional": false,            "field": "data.categories",            "description": "<p>List of categories.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.categories.id",            "description": "<p>Id number of the category.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.categories.title",            "description": "<p>Title of the category.</p>"          },          {            "group": "200 OK",            "type": "Object[]",            "optional": false,            "field": "data.images",            "description": "<p>List of images.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.images.thumbnail",            "description": "<p>Thumbnail image of the image.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.images.thumbnail.url",            "description": "<p>Url of the thumbnail image.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.images.thumbnail.width",            "description": "<p>Width of the thumbnail image.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.images.thumbnail.height",            "description": "<p>Height of the thumbnail image.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.images.preview",            "description": "<p>Preview image of the image.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.images.preview.url",            "description": "<p>Url of the preview image.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.images.preview.width",            "description": "<p>Width of the preview image.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.images.preview.height",            "description": "<p>Height of the preview image.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.images.full",            "description": "<p>Full image of the image.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.images.full.url",            "description": "<p>Url of the full image.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.images.full.width",            "description": "<p>Width of the full image.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.images.full.height",            "description": "<p>Height of the full image.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.counts",            "description": "<p>Counters of the media.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.counts.comments",            "description": "<p>Comment count of the media.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.counts.favorites",            "description": "<p>Favorite count of the media.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.counts.images",            "description": "<p>Image count of the media.</p>"          },          {            "group": "200 OK",            "type": "Date",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date and time of the media in <em>ISO 8601</em> format.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "meta",            "description": "<p>Pagination information.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "meta.total_count",            "description": "<p>Total number of the records.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "meta.page_count",            "description": "<p>Total number of the pages.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "meta.current_page",            "description": "<p>Current page number.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "meta.per_page",            "description": "<p>Number of the records per page.</p>"          }        ]      },      "examples": [        {          "title": "Example Response",          "content": "HTTP/1.1 200 OK\n{\n    \"data\": [\n        {\n            \"id\": 1,\n            \"type\": \"single\",\n            \"caption\": \"Örnek media.\",\n            \"favorited\": true,\n            \"public_id\": \"zwukbo4tdueug6svck1iek1uc1c-hy35\",\n            \"public_url\": \"https://app.medik.com/sharing/zwukbo4tdueug6svck1iek1uc1c-hy35\",\n            \"user\": {\n                \"id\": 1,\n                \"username\": \"hdogan\",\n                \"real_name\": \"Hidayet Doğan\",\n                \"screen_name\": \"Hidayet Doğan\",\n                \"screen_speciality\": \"Dermatoloji Hekimi\",\n                \"verified\": true,\n                \"following\": false,\n                \"picture\": {\n                    \"url\": \"https://api.example.com/uploads/profiles/zwukbo4tdueug6svck1iek1uc1c-hy35_150.jpg\",\n                    \"width\": 150,\n                    \"height\": 150\n                },\n                \"profession\": {\n                    \"id\": 1,\n                    \"title\": \"Hekim\"\n                },\n                \"speciality\": {\n                    \"id\": 10,\n                    \"title\": \"Dermatolog\"\n                }\n            },\n            \"categories\": [\n                {\n                    \"id\": 1,\n                    \"title\": \"Burun\"\n                },\n                {\n                    \"id\": 2,\n                    \"title\": \"Nefroloji\"\n                }\n            ],\n            \"images\": [\n                {\n                    \"thumbnail\": {\n                        \"url\": \"https://api.example.com/uploads/media/zwukbo4tdueug6svck1iek1uc1c-hy35_150.jpg\",\n                        \"width\": 150,\n                        \"height\": 150\n                    },\n                    \"preview\": {\n                        \"url\": \"https://api.example.com/uploads/media/zwukbo4tdueug6svck1iek1uc1c-hy35_300.jpg\",\n                        \"width\": 300,\n                        \"height\": 200\n                    },\n                    \"full\": {\n                        \"url\": \"https://api.example.com/uploads/media/zwukbo4tdueug6svck1iek1uc1c-hy35.jpg\",\n                        \"width\": 1024,\n                        \"height\": 700\n                    }\n                }\n            ],\n            \"counts\": {\n                \"comments\": 2,\n                \"favorites\": 1,\n                \"images\": 1\n            },\n            \"created_at\": \"2015-02-13T15:26:55+00:00\"\n        }\n    ],\n    \"meta\": {\n        \"total_count\": 1,\n        \"page_count\": 1,\n        \"current_page\": 1,\n        \"per_page\": 10\n    }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "401 Authorization Error": [          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "500 Server Error": [          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/cities",    "title": "List of cities",    "version": "0.0.1",    "group": "Cities_and_Professions",    "name": "IndexCity",    "permission": [      {        "name": "Client Credentials"      }    ],    "success": {      "fields": {        "200 OK": [          {            "group": "200 OK",            "type": "Object[]",            "optional": false,            "field": "data",            "description": "<p>List of cities.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "id",            "description": "<p>Id number of the city.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "title",            "description": "<p>Title of the city.</p>"          }        ]      },      "examples": [        {          "title": "Example Response",          "content": "HTTP/1.1 200 OK\n{\n    \"data\": [\n        {\n            \"id\": 1,\n            \"title\": \"Adana\"\n        },\n        {\n            \"id\": 2,\n            \"title\": \"Adıyaman\"\n        }\n    ]\n}",          "type": "json"        }      ]    },    "filename": "controllers/CityController.php",    "groupTitle": "Cities_and_Professions",    "error": {      "fields": {        "500 Server Error": [          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/professions",    "title": "List of professions",    "version": "0.0.1",    "group": "Cities_and_Professions",    "name": "IndexProfession",    "permission": [      {        "name": "Client Credentials"      }    ],    "success": {      "fields": {        "200 OK": [          {            "group": "200 OK",            "type": "Object[]",            "optional": false,            "field": "data",            "description": "<p>List of professions.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.id",            "description": "<p>Id number of the profession object.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.title",            "description": "<p>Title of the profession object.</p>"          },          {            "group": "200 OK",            "type": "Object[]",            "optional": false,            "field": "data.specialities",            "description": "<p>List of specialities.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.specialities.id",            "description": "<p>Id number of the speciality.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.specialities.title",            "description": "<p>Title of the specility.</p>"          }        ]      },      "examples": [        {          "title": "Example Response",          "content": "HTTP/1.1 200 OK\n{\n    \"data\": [\n        {\n            \"id\": 1,\n            \"title\": \"Hekim\",\n            \"specialities\": [\n                {\n                    \"id\": 11,\n                    \"title\": \"Acil Tıp\"\n                },\n                {\n                    \"id\": 12,\n                    \"title\": \"Kalp ve Damar Cerrahisi\"\n                }\n            ]\n        },\n        {\n            \"id\": 2,\n            \"title\": \"Diğer Sağlık Dışı Çalışanı\",\n            \"specialities\": []\n        }\n    ]\n}",          "type": "json"        }      ]    },    "filename": "controllers/ProfessionController.php",    "groupTitle": "Cities_and_Professions",    "error": {      "fields": {        "500 Server Error": [          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ]      }    }  },  {    "type": "post",    "url": "/comments/:comment_id/votes",    "title": "Vote a comment",    "description": "<p><code>422 Data Validation Error</code> occurs if the comment object does not exists.</p>",    "version": "0.0.1",    "group": "Comments",    "name": "CreateVote",    "permission": [      {        "name": "User",        "title": "Authorized user.",        "description": "<p>Authorization can be done with using either <code>access_token</code> query string or <code>Authorization</code> header with <strong>Bearer</strong> token.</p>"      }    ],    "parameter": {      "fields": {        "Url Parameters": [          {            "group": "Url Parameters",            "type": "Integer",            "optional": false,            "field": "comment_id",            "description": "<p>Id number of the comment object.</p>"          }        ],        "Parameters": [          {            "group": "Parameters",            "type": "String",            "allowedValues": [              "up",              "down"            ],            "optional": false,            "field": "score",            "description": "<p>Score of the vote object.</p>"          }        ]      }    },    "success": {      "fields": {        "201 Created": [          {            "group": "201 Created",            "type": "Integer",            "optional": false,            "field": "id",            "description": "<p>Id number of the vote object.</p>"          },          {            "group": "201 Created",            "type": "Object",            "optional": false,            "field": "comment",            "description": "<p>Comment object.</p>"          },          {            "group": "201 Created",            "type": "Integer",            "optional": false,            "field": "comment.id",            "description": "<p>Id number of the comment object.</p>"          },          {            "group": "201 Created",            "type": "Integer",            "optional": false,            "field": "comment.score",            "description": "<p>Average score of the comment object.</p>"          },          {            "group": "201 Created",            "type": "Date",            "optional": false,            "field": "created_at",            "description": "<p>Creation date and time of the vote object in <em>ISO 8601</em> format.</p>"          }        ]      },      "examples": [        {          "title": "Example Response",          "content": "HTTP/1.1 201 Created\n{\n    \"id\": 1,\n    \"comment\": {\n        \"id\": 1,\n        \"score\": 5\n    },\n    \"created_at\": \"2015-02-13T15:26:55+00:00\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Example Validation Error Response",          "content": "HTTP/1.1 422 Data Validation Failed.\n[\n    {\n        \"message\": \"Invalid score.\",\n        \"field\": \"score\"\n    }\n]",          "type": "json"        }      ],      "fields": {        "401 Authorization Error": [          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "422 Data Validation Error": [          {            "group": "422 Data Validation Error",            "type": "Object[]",            "optional": false,            "field": "error",            "description": "<p>Data validation error object.</p>"          },          {            "group": "422 Data Validation Error",            "type": "String",            "optional": false,            "field": "error.message",            "description": "<p>Message of the error.</p>"          },          {            "group": "422 Data Validation Error",            "type": "String",            "optional": false,            "field": "error.field",            "description": "<p>Field name of the error.</p>"          }        ],        "500 Server Error": [          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ]      }    },    "filename": "controllers/VoteController.php",    "groupTitle": "Comments"  },  {    "type": "delete",    "url": "/comments/:id",    "title": "Delete a comment",    "description": "<p><code>404 Not Found</code> occurs if the comment object is not owned by the authorized user.</p>",    "version": "0.0.1",    "group": "Comments",    "name": "DeleteComment",    "permission": [      {        "name": "Owner",        "title": "Owner user of the object.",        "description": "<p>If the authorized user is not owner of the requested object 404 error occurs.</p>"      }    ],    "parameter": {      "fields": {        "Url Parameters": [          {            "group": "Url Parameters",            "type": "Integer",            "optional": false,            "field": "id",            "description": "<p>Id number of the comment object.</p>"          }        ]      }    },    "filename": "controllers/CommentController.php",    "groupTitle": "Comments",    "success": {      "fields": {        "204 No Content": [          {            "group": "204 No Content",            "optional": false,            "field": "N/A",            "description": "<p>N/A</p>"          }        ]      }    },    "error": {      "fields": {        "401 Authorization Error": [          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "404 Not Found": [          {            "group": "404 Not Found",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "404 Not Found",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "404 Not Found",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "404 Not Found",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "500 Server Error": [          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ]      }    }  },  {    "type": "delete",    "url": "/comments/:comment_id/votes",    "title": "Unvote a comment",    "description": "<p><code>404 Not Found</code> occurs if the comment object is not voted by the authorized user.</p>",    "version": "0.0.1",    "group": "Comments",    "name": "DeleteVote",    "permission": [      {        "name": "Owner",        "title": "Owner user of the object.",        "description": "<p>If the authorized user is not owner of the requested object 404 error occurs.</p>"      }    ],    "parameter": {      "fields": {        "Url Parameters": [          {            "group": "Url Parameters",            "type": "Integer",            "optional": false,            "field": "comment_id",            "description": "<p>Id number of the comment object.</p>"          }        ]      }    },    "filename": "controllers/VoteController.php",    "groupTitle": "Comments",    "success": {      "fields": {        "204 No Content": [          {            "group": "204 No Content",            "optional": false,            "field": "N/A",            "description": "<p>N/A</p>"          }        ]      }    },    "error": {      "fields": {        "401 Authorization Error": [          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "404 Not Found": [          {            "group": "404 Not Found",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "404 Not Found",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "404 Not Found",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "404 Not Found",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "500 Server Error": [          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ]      }    }  },  {    "type": "post",    "url": "/comments/:comment_id/report",    "title": "Report a comment",    "description": "<p><code>422 Data Validation Error</code> occurs if the comment object does not exists.</p>",    "version": "0.0.1",    "group": "Comments",    "name": "ReportComment",    "permission": [      {        "name": "User",        "title": "Authorized user.",        "description": "<p>Authorization can be done with using either <code>access_token</code> query string or <code>Authorization</code> header with <strong>Bearer</strong> token.</p>"      }    ],    "parameter": {      "fields": {        "Url Parameters": [          {            "group": "Url Parameters",            "type": "Integer",            "optional": false,            "field": "comment_id",            "description": "<p>Id number of the comment object.</p>"          }        ],        "Parameters": [          {            "group": "Parameters",            "type": "String",            "size": "..250",            "optional": false,            "field": "text",            "description": "<p>Text of the report object.</p>"          }        ]      }    },    "error": {      "examples": [        {          "title": "Example Validation Error Response",          "content": "HTTP/1.1 422 Data Validation Failed.\n[\n    {\n        \"message\": \"Report text cannot be left blank.\",\n        \"field\": \"text\"\n    }\n]",          "type": "json"        }      ],      "fields": {        "401 Authorization Error": [          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "422 Data Validation Error": [          {            "group": "422 Data Validation Error",            "type": "Object[]",            "optional": false,            "field": "error",            "description": "<p>Data validation error object.</p>"          },          {            "group": "422 Data Validation Error",            "type": "String",            "optional": false,            "field": "error.message",            "description": "<p>Message of the error.</p>"          },          {            "group": "422 Data Validation Error",            "type": "String",            "optional": false,            "field": "error.field",            "description": "<p>Field name of the error.</p>"          }        ],        "500 Server Error": [          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ]      }    },    "filename": "controllers/ReportController.php",    "groupTitle": "Comments",    "success": {      "fields": {        "201 Created": [          {            "group": "201 Created",            "type": "Integer",            "optional": false,            "field": "id",            "description": "<p>Id number of the object.</p>"          },          {            "group": "201 Created",            "type": "Date",            "optional": false,            "field": "created_at",            "description": "<p>Creation date and time of the object in <em>ISO 8601</em> format.</p>"          }        ]      },      "examples": [        {          "title": "Example Response",          "content": "HTTP/1.1 201 Created\n{\n    \"id\": 1,\n    \"created_at\": \"2015-02-13T15:26:55+00:00\"\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/media/:id/comments",    "title": "List of media comments",    "version": "0.0.1",    "group": "Media",    "name": "CommentsMedia",    "permission": [      {        "name": "User",        "title": "Authorized user.",        "description": "<p>Authorization can be done with using either <code>access_token</code> query string or <code>Authorization</code> header with <strong>Bearer</strong> token.</p>"      }    ],    "parameter": {      "fields": {        "Url Parameters": [          {            "group": "Url Parameters",            "type": "Integer",            "optional": false,            "field": "id",            "description": "<p>Id number of the media object.</p>"          }        ],        "Query String Parameters": [          {            "group": "Query String Parameters",            "type": "Integer",            "optional": true,            "field": "page",            "description": "<p>Page number.</p>"          },          {            "group": "Query String Parameters",            "type": "Integer",            "optional": true,            "field": "per_page",            "description": "<p>Number of the records per page.</p>"          }        ]      }    },    "success": {      "fields": {        "200 OK": [          {            "group": "200 OK",            "type": "Object[]",            "optional": false,            "field": "data",            "description": "<p>List of the comments.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.id",            "description": "<p>Id number of the comment object.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.text",            "description": "<p>Text of the comment object.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.score",            "description": "<p>Score of the comment object.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.user",            "description": "<p>Owner user of the comment object.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.user.id",            "description": "<p>Id number of the owner user.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.user.username",            "description": "<p>Username of the owner user.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.user.real_name",            "description": "<p>Real name of the owner user.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.user.screen_name",            "description": "<p>Screen name of the owner user.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.user.screen_speciality",            "description": "<p>Screen speciality of the owner user.</p>"          },          {            "group": "200 OK",            "type": "Boolean",            "optional": false,            "field": "data.user.verified",            "description": "<p>Specify if the owner user is verified.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.user.picture",            "description": "<p>Picture of the owner user (<code>null</code> if profile picture is not uploaded).</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.user.picture.url",            "description": "<p>Url of the profile picture.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.user.picture.width",            "description": "<p>Width of the profile picture.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.user.picture.height",            "description": "<p>Height of the profile picture.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.user.profession",            "description": "<p>Profession of the owner user.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.user.profession.id",            "description": "<p>Id number of the profession.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.user.profession.title",            "description": "<p>Title of the profession.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.user.speciality",            "description": "<p>Speciality of the owner user.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.user.speciality.id",            "description": "<p>Id number of the speciality.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.user.speciality.title",            "description": "<p>Title of the speciality.</p>"          },          {            "group": "200 OK",            "type": "Date",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date and time of the comment object in <em>ISO 8601</em> format.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "meta",            "description": "<p>Pagination information.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "meta.total_count",            "description": "<p>Total number of the records.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "meta.page_count",            "description": "<p>Total number of the pages.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "meta.current_page",            "description": "<p>Current page number.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "meta.per_page",            "description": "<p>Number of the records per page.</p>"          }        ]      },      "examples": [        {          "title": "Example Response",          "content": "HTTP/1.1 200 OK\n{\n    \"data\": [\n        {\n            \"id\": 1,\n            \"text\": \"Örnek yorum.\",\n            \"score\": 5,\n            \"user\": {\n                \"id\": 1,\n                \"username\": \"hdogan\",\n                \"real_name\": \"Hidayet Doğan\",\n                \"screen_name\": \"Hidayet Doğan\",\n                \"screen_speciality\": \"Dermatoloji Hekimi\",\n                \"verified\": true,\n                \"picture\": {\n                    \"url: \"https://api.example.com/uploads/media/zwukbo4tdueug6svck1iek1uc1c-hy35_150.jpg\",\n                    \"width\": 150,\n                    \"height\": 150\n                },\n                \"profession\": {\n                    \"id\": 1,\n                    \"title\": \"Hekim\"\n                },\n                \"speciality\": {\n                    \"id\": 50,\n                    \"title\": \"Dermatoloji\"\n                }\n            },\n            \"created_at\": \"2015-02-13T15:26:55+00:00\"\n        },\n        {\n            \"id\": 2,\n            \"text\": \"Diğer yorum.\",\n            \"score\": 0,\n            \"user\": {\n                \"id\": 2,\n                \"username\": \"cigdem\",\n                \"real_name\": null,\n                \"screen_name\": \"cigdem\",\n                \"screen_speciality\": \"Şirket Müdürü\",\n                \"verified\": false,\n                \"picture\": null,\n                \"profession\": {\n                    \"id\": 2,\n                    \"title\": \"Diğer\"\n                },\n                \"speciality\": {\n                    \"id\": 10,\n                    \"title\": \"Şirket Müdürü\"\n                }\n            },\n            \"created_at\": \"2015-02-13T15:26:55+00:00\"\n        }\n    ],\n    \"meta\": {\n        \"total_count\": 2,\n        \"page_count\": 1,\n        \"current_page\": 1,\n        \"per_page\": 50\n    }\n}",          "type": "json"        }      ]    },    "filename": "controllers/MediaController.php",    "groupTitle": "Media",    "error": {      "fields": {        "401 Authorization Error": [          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "500 Server Error": [          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ]      }    }  },  {    "type": "post",    "url": "/media/:media_id/comments",    "title": "Submit a new comment",    "description": "<p><code>422 Data Validation Error</code> occurs if the media object does not exists.</p>",    "version": "0.0.1",    "group": "Media",    "name": "CreateComment",    "permission": [      {        "name": "User",        "title": "Authorized user.",        "description": "<p>Authorization can be done with using either <code>access_token</code> query string or <code>Authorization</code> header with <strong>Bearer</strong> token.</p>"      }    ],    "parameter": {      "fields": {        "Url Parameters": [          {            "group": "Url Parameters",            "type": "Integer",            "optional": false,            "field": "media_id",            "description": "<p>Id number of the media object.</p>"          }        ],        "Parameters": [          {            "group": "Parameters",            "type": "String",            "size": "..250",            "optional": false,            "field": "text",            "description": "<p>Content of the comment object.</p>"          }        ]      }    },    "error": {      "examples": [        {          "title": "Example Validation Error Response",          "content": "HTTP/1.1 422 Data Validation Failed.\n[\n    {\n        \"message\": \"Yorum boş bırakılamaz.\",\n        \"field\": \"text\"\n    }\n]",          "type": "json"        }      ],      "fields": {        "401 Authorization Error": [          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "422 Data Validation Error": [          {            "group": "422 Data Validation Error",            "type": "Object[]",            "optional": false,            "field": "error",            "description": "<p>Data validation error object.</p>"          },          {            "group": "422 Data Validation Error",            "type": "String",            "optional": false,            "field": "error.message",            "description": "<p>Message of the error.</p>"          },          {            "group": "422 Data Validation Error",            "type": "String",            "optional": false,            "field": "error.field",            "description": "<p>Field name of the error.</p>"          }        ],        "500 Server Error": [          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ]      }    },    "filename": "controllers/CommentController.php",    "groupTitle": "Media",    "success": {      "fields": {        "201 Created": [          {            "group": "201 Created",            "type": "Integer",            "optional": false,            "field": "id",            "description": "<p>Id number of the object.</p>"          },          {            "group": "201 Created",            "type": "Date",            "optional": false,            "field": "created_at",            "description": "<p>Creation date and time of the object in <em>ISO 8601</em> format.</p>"          }        ]      },      "examples": [        {          "title": "Example Response",          "content": "HTTP/1.1 201 Created\n{\n    \"id\": 1,\n    \"created_at\": \"2015-02-13T15:26:55+00:00\"\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/media/:media_id/favorites",    "title": "Favorite a media",    "description": "<p><code>422 Data Validation Error</code> occurs if the media object does not exists. <code>201 Created</code> returns if the media object is already favorited by the authorized user.</p>",    "version": "0.0.1",    "group": "Media",    "name": "CreateFavorite",    "permission": [      {        "name": "User",        "title": "Authorized user.",        "description": "<p>Authorization can be done with using either <code>access_token</code> query string or <code>Authorization</code> header with <strong>Bearer</strong> token.</p>"      }    ],    "parameter": {      "fields": {        "Url Parameters": [          {            "group": "Url Parameters",            "type": "Integer",            "optional": false,            "field": "media_id",            "description": "<p>Id number of the media object.</p>"          }        ]      }    },    "error": {      "examples": [        {          "title": "Example Validation Error Response",          "content": "HTTP/1.1 422 Data Validation Failed.\n[\n    {\n        \"message\": \"Media Id does not exist.\",\n        \"field\": \"media_id\"\n    }\n]",          "type": "json"        }      ],      "fields": {        "401 Authorization Error": [          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "422 Data Validation Error": [          {            "group": "422 Data Validation Error",            "type": "Object[]",            "optional": false,            "field": "error",            "description": "<p>Data validation error object.</p>"          },          {            "group": "422 Data Validation Error",            "type": "String",            "optional": false,            "field": "error.message",            "description": "<p>Message of the error.</p>"          },          {            "group": "422 Data Validation Error",            "type": "String",            "optional": false,            "field": "error.field",            "description": "<p>Field name of the error.</p>"          }        ],        "500 Server Error": [          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ]      }    },    "filename": "controllers/FavoriteController.php",    "groupTitle": "Media",    "success": {      "fields": {        "201 Created": [          {            "group": "201 Created",            "type": "Integer",            "optional": false,            "field": "id",            "description": "<p>Id number of the object.</p>"          },          {            "group": "201 Created",            "type": "Date",            "optional": false,            "field": "created_at",            "description": "<p>Creation date and time of the object in <em>ISO 8601</em> format.</p>"          }        ]      },      "examples": [        {          "title": "Example Response",          "content": "HTTP/1.1 201 Created\n{\n    \"id\": 1,\n    \"created_at\": \"2015-02-13T15:26:55+00:00\"\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/media/files",    "title": "Upload media files",    "version": "0.0.1",    "group": "Media",    "name": "CreateImage",    "permission": [      {        "name": "User",        "title": "Authorized user.",        "description": "<p>Authorization can be done with using either <code>access_token</code> query string or <code>Authorization</code> header with <strong>Bearer</strong> token.</p>"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Content-Type",            "description": "<p>multipart/form-data</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameters": [          {            "group": "Parameters",            "type": "Object",            "optional": false,            "field": "file",            "description": "<p>File of the image.</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Example Response",          "content": "HTTP/1.1 201 Created\n{\n    \"id\": 65,\n    \"created_at\": \"2015-02-13T15:26:55+00:00\"\n}",          "type": "json"        }      ],      "fields": {        "201 Created": [          {            "group": "201 Created",            "type": "Integer",            "optional": false,            "field": "id",            "description": "<p>Id number of the object.</p>"          },          {            "group": "201 Created",            "type": "Date",            "optional": false,            "field": "created_at",            "description": "<p>Creation date and time of the object in <em>ISO 8601</em> format.</p>"          }        ]      }    },    "error": {      "examples": [        {          "title": "Example Validation Error Response",          "content": "HTTP/1.1 422 Data Validation Failed.\n[\n    {\n        \"message\": \"Sadece jpg, jpeg, png, gif uzantılı dosyaları yükleyebilirsiniz.\",\n        \"field\": \"file\"\n    }\n]",          "type": "json"        }      ],      "fields": {        "401 Authorization Error": [          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "422 Data Validation Error": [          {            "group": "422 Data Validation Error",            "type": "Object[]",            "optional": false,            "field": "error",            "description": "<p>Data validation error object.</p>"          },          {            "group": "422 Data Validation Error",            "type": "String",            "optional": false,            "field": "error.message",            "description": "<p>Message of the error.</p>"          },          {            "group": "422 Data Validation Error",            "type": "String",            "optional": false,            "field": "error.field",            "description": "<p>Field name of the error.</p>"          }        ],        "500 Server Error": [          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ]      }    },    "filename": "controllers/ImageController.php",    "groupTitle": "Media"  },  {    "type": "post",    "url": "/media",    "title": "Create a new media",    "version": "0.0.1",    "group": "Media",    "name": "CreateMedia",    "permission": [      {        "name": "User\n*"      }    ],    "parameter": {      "fields": {        "Parameters": [          {            "group": "Parameters",            "type": "String",            "size": "..250",            "optional": false,            "field": "caption",            "description": "<p>Caption of the media.</p>"          },          {            "group": "Parameters",            "type": "Integer[]",            "optional": false,            "field": "images",            "description": "<p>Images of the media.</p>"          },          {            "group": "Parameters",            "type": "Integer[]",            "optional": false,            "field": "categories",            "description": "<p>Categories of the media.</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Example Response",          "content": "HTTP/1.1 201 Created\nLocation: https://api.media.com/media/1\n{\n    \"id\": 1,\n    \"created_at\": \"2015-02-13T15:26:55+00:00\"\n}",          "type": "json"        }      ],      "fields": {        "201 Created": [          {            "group": "201 Created",            "type": "Integer",            "optional": false,            "field": "id",            "description": "<p>Id number of the object.</p>"          },          {            "group": "201 Created",            "type": "Date",            "optional": false,            "field": "created_at",            "description": "<p>Creation date and time of the object in <em>ISO 8601</em> format.</p>"          }        ]      }    },    "error": {      "examples": [        {          "title": "Example Validation Error Response",          "content": "HTTP/1.1 422 Data Validation Failed.\n[\n    {\n        \"message\": \"Açıklama boş bırakılamaz.\",\n        \"field\": \"caption\"\n    },\n    {\n        \"message\": \"Geçersiz dosya.\",\n        \"field\": \"images\"\n    }\n]",          "type": "json"        }      ],      "fields": {        "401 Authorization Error": [          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "422 Data Validation Error": [          {            "group": "422 Data Validation Error",            "type": "Object[]",            "optional": false,            "field": "error",            "description": "<p>Data validation error object.</p>"          },          {            "group": "422 Data Validation Error",            "type": "String",            "optional": false,            "field": "error.message",            "description": "<p>Message of the error.</p>"          },          {            "group": "422 Data Validation Error",            "type": "String",            "optional": false,            "field": "error.field",            "description": "<p>Field name of the error.</p>"          }        ],        "500 Server Error": [          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ]      }    },    "filename": "controllers/MediaController.php",    "groupTitle": "Media"  },  {    "type": "delete",    "url": "/media/:media_id/favorites",    "title": "Unfavorite a media",    "description": "<p><code>404 Not Found</code> occurs if the media object is not favorited by the authorized user.</p>",    "version": "0.0.1",    "group": "Media",    "name": "DeleteFavorite",    "permission": [      {        "name": "Owner",        "title": "Owner user of the object.",        "description": "<p>If the authorized user is not owner of the requested object 404 error occurs.</p>"      }    ],    "parameter": {      "fields": {        "Url Parameters": [          {            "group": "Url Parameters",            "type": "Integer",            "optional": false,            "field": "media_id",            "description": "<p>Id number of the media object.</p>"          }        ]      }    },    "filename": "controllers/FavoriteController.php",    "groupTitle": "Media",    "success": {      "fields": {        "204 No Content": [          {            "group": "204 No Content",            "optional": false,            "field": "N/A",            "description": "<p>N/A</p>"          }        ]      }    },    "error": {      "fields": {        "401 Authorization Error": [          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "404 Not Found": [          {            "group": "404 Not Found",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "404 Not Found",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "404 Not Found",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "404 Not Found",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "500 Server Error": [          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ]      }    }  },  {    "type": "delete",    "url": "/media/:id",    "title": "Delete a media",    "description": "<p><code>404 Not Found</code> occurs if the media object is not owned by the authorized user.</p>",    "version": "0.0.1",    "group": "Media",    "name": "DeleteMedia",    "permission": [      {        "name": "Owner",        "title": "Owner user of the object.",        "description": "<p>If the authorized user is not owner of the requested object 404 error occurs.</p>"      }    ],    "parameter": {      "fields": {        "Url Parameters": [          {            "group": "Url Parameters",            "type": "Integer",            "optional": false,            "field": "id",            "description": "<p>Id number of the media object.</p>"          }        ]      }    },    "filename": "controllers/MediaController.php",    "groupTitle": "Media",    "success": {      "fields": {        "204 No Content": [          {            "group": "204 No Content",            "optional": false,            "field": "N/A",            "description": "<p>N/A</p>"          }        ]      }    },    "error": {      "fields": {        "401 Authorization Error": [          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "404 Not Found": [          {            "group": "404 Not Found",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "404 Not Found",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "404 Not Found",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "404 Not Found",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "500 Server Error": [          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/media/popular",    "title": "List of popular media",    "version": "0.0.1",    "group": "Media",    "name": "PopularMedia",    "permission": [      {        "name": "Client Credentials"      }    ],    "filename": "controllers/MediaController.php",    "groupTitle": "Media",    "success": {      "fields": {        "200 OK": [          {            "group": "200 OK",            "type": "Object[]",            "optional": false,            "field": "data",            "description": "<p>List of media.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.id",            "description": "<p>Id number of media media.</p>"          },          {            "group": "200 OK",            "type": "String",            "allowedValues": [              "single",              "multiple"            ],            "optional": false,            "field": "data.type",            "description": "<p>Type of the media.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.caption",            "description": "<p>Caption of the media.</p>"          },          {            "group": "200 OK",            "type": "Boolean",            "optional": false,            "field": "data.favorited",            "description": "<p>Specify if the media is favorited by the user.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.public_id",            "description": "<p>Public id of the media.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.public_url",            "description": "<p>Public (sharing) url of the media.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.user",            "description": "<p>User of the media.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.user.id",            "description": "<p>Id number of the user.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.user.username",            "description": "<p>Username of the user.</p>"          },          {            "group": "200 OK",            "type": "Boolean",            "optional": false,            "field": "data.user.verified",            "description": "<p>Specify if the user is verified.</p>"          },          {            "group": "200 OK",            "type": "Boolean",            "optional": false,            "field": "data.user.following",            "description": "<p>Specify if the user is followed.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.user.real_name",            "description": "<p>Real name of the user.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.user.screen_name",            "description": "<p>Screen name of the user.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.user.screen_speciality",            "description": "<p>Screen speciality of the user.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.user.picture",            "description": "<p>Picture of the user (<code>null</code> if profile picture is not uploaded).</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.user.picture.url",            "description": "<p>Url of the profile picture.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.user.picture.width",            "description": "<p>Width of the profile picture.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.user.picture.height",            "description": "<p>Height of the profile picture.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.user.profession",            "description": "<p>Profession of the user.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.user.profession.id",            "description": "<p>Id number of the profession.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.user.profession.title",            "description": "<p>Title of the profession.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.user.speciality",            "description": "<p>Speciality of the user.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.user.speciality.id",            "description": "<p>Id number of the speciality.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.user.speciality.title",            "description": "<p>Title of the speciality.</p>"          },          {            "group": "200 OK",            "type": "Object[]",            "optional": false,            "field": "data.categories",            "description": "<p>List of categories.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.categories.id",            "description": "<p>Id number of the category.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.categories.title",            "description": "<p>Title of the category.</p>"          },          {            "group": "200 OK",            "type": "Object[]",            "optional": false,            "field": "data.images",            "description": "<p>List of images.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.images.thumbnail",            "description": "<p>Thumbnail image of the image.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.images.thumbnail.url",            "description": "<p>Url of the thumbnail image.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.images.thumbnail.width",            "description": "<p>Width of the thumbnail image.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.images.thumbnail.height",            "description": "<p>Height of the thumbnail image.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.images.preview",            "description": "<p>Preview image of the image.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.images.preview.url",            "description": "<p>Url of the preview image.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.images.preview.width",            "description": "<p>Width of the preview image.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.images.preview.height",            "description": "<p>Height of the preview image.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.images.full",            "description": "<p>Full image of the image.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.images.full.url",            "description": "<p>Url of the full image.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.images.full.width",            "description": "<p>Width of the full image.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.images.full.height",            "description": "<p>Height of the full image.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.counts",            "description": "<p>Counters of the media.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.counts.comments",            "description": "<p>Comment count of the media.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.counts.favorites",            "description": "<p>Favorite count of the media.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.counts.images",            "description": "<p>Image count of the media.</p>"          },          {            "group": "200 OK",            "type": "Date",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date and time of the media in <em>ISO 8601</em> format.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "meta",            "description": "<p>Pagination information.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "meta.total_count",            "description": "<p>Total number of the records.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "meta.page_count",            "description": "<p>Total number of the pages.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "meta.current_page",            "description": "<p>Current page number.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "meta.per_page",            "description": "<p>Number of the records per page.</p>"          }        ]      },      "examples": [        {          "title": "Example Response",          "content": "HTTP/1.1 200 OK\n{\n    \"data\": [\n        {\n            \"id\": 1,\n            \"type\": \"single\",\n            \"caption\": \"Örnek media.\",\n            \"favorited\": true,\n            \"public_id\": \"zwukbo4tdueug6svck1iek1uc1c-hy35\",\n            \"public_url\": \"https://app.medik.com/sharing/zwukbo4tdueug6svck1iek1uc1c-hy35\",\n            \"user\": {\n                \"id\": 1,\n                \"username\": \"hdogan\",\n                \"real_name\": \"Hidayet Doğan\",\n                \"screen_name\": \"Hidayet Doğan\",\n                \"screen_speciality\": \"Dermatoloji Hekimi\",\n                \"verified\": true,\n                \"following\": false,\n                \"picture\": {\n                    \"url\": \"https://api.example.com/uploads/profiles/zwukbo4tdueug6svck1iek1uc1c-hy35_150.jpg\",\n                    \"width\": 150,\n                    \"height\": 150\n                },\n                \"profession\": {\n                    \"id\": 1,\n                    \"title\": \"Hekim\"\n                },\n                \"speciality\": {\n                    \"id\": 10,\n                    \"title\": \"Dermatolog\"\n                }\n            },\n            \"categories\": [\n                {\n                    \"id\": 1,\n                    \"title\": \"Burun\"\n                },\n                {\n                    \"id\": 2,\n                    \"title\": \"Nefroloji\"\n                }\n            ],\n            \"images\": [\n                {\n                    \"thumbnail\": {\n                        \"url\": \"https://api.example.com/uploads/media/zwukbo4tdueug6svck1iek1uc1c-hy35_150.jpg\",\n                        \"width\": 150,\n                        \"height\": 150\n                    },\n                    \"preview\": {\n                        \"url\": \"https://api.example.com/uploads/media/zwukbo4tdueug6svck1iek1uc1c-hy35_300.jpg\",\n                        \"width\": 300,\n                        \"height\": 200\n                    },\n                    \"full\": {\n                        \"url\": \"https://api.example.com/uploads/media/zwukbo4tdueug6svck1iek1uc1c-hy35.jpg\",\n                        \"width\": 1024,\n                        \"height\": 700\n                    }\n                }\n            ],\n            \"counts\": {\n                \"comments\": 2,\n                \"favorites\": 1,\n                \"images\": 1\n            },\n            \"created_at\": \"2015-02-13T15:26:55+00:00\"\n        }\n    ],\n    \"meta\": {\n        \"total_count\": 1,\n        \"page_count\": 1,\n        \"current_page\": 1,\n        \"per_page\": 10\n    }\n}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Query String Parameters": [          {            "group": "Query String Parameters",            "type": "Integer",            "optional": true,            "field": "page",            "description": "<p>Page number.</p>"          },          {            "group": "Query String Parameters",            "type": "Integer",            "optional": true,            "field": "per_page",            "description": "<p>Number of the records per page.</p>"          }        ]      }    },    "error": {      "fields": {        "401 Authorization Error": [          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "500 Server Error": [          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ]      }    }  },  {    "type": "post",    "url": "/media/:media_id/report",    "title": "Report a media",    "description": "<p><code>422 Data Validation Error</code> occurs if the media object does not exists.</p>",    "version": "0.0.1",    "group": "Media",    "name": "ReportMedia",    "permission": [      {        "name": "User",        "title": "Authorized user.",        "description": "<p>Authorization can be done with using either <code>access_token</code> query string or <code>Authorization</code> header with <strong>Bearer</strong> token.</p>"      }    ],    "parameter": {      "fields": {        "Url Parameters": [          {            "group": "Url Parameters",            "type": "Integer",            "optional": false,            "field": "media_id",            "description": "<p>Id number of the media object.</p>"          }        ],        "Parameters": [          {            "group": "Parameters",            "type": "String",            "size": "..250",            "optional": false,            "field": "text",            "description": "<p>Text of the report object.</p>"          }        ]      }    },    "error": {      "examples": [        {          "title": "Example Validation Error Response",          "content": "HTTP/1.1 422 Data Validation Failed.\n[\n    {\n        \"message\": \"Report text cannot be left blank.\",\n        \"field\": \"text\"\n    }\n]",          "type": "json"        }      ],      "fields": {        "401 Authorization Error": [          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "422 Data Validation Error": [          {            "group": "422 Data Validation Error",            "type": "Object[]",            "optional": false,            "field": "error",            "description": "<p>Data validation error object.</p>"          },          {            "group": "422 Data Validation Error",            "type": "String",            "optional": false,            "field": "error.message",            "description": "<p>Message of the error.</p>"          },          {            "group": "422 Data Validation Error",            "type": "String",            "optional": false,            "field": "error.field",            "description": "<p>Field name of the error.</p>"          }        ],        "500 Server Error": [          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ]      }    },    "filename": "controllers/ReportController.php",    "groupTitle": "Media",    "success": {      "fields": {        "201 Created": [          {            "group": "201 Created",            "type": "Integer",            "optional": false,            "field": "id",            "description": "<p>Id number of the object.</p>"          },          {            "group": "201 Created",            "type": "Date",            "optional": false,            "field": "created_at",            "description": "<p>Creation date and time of the object in <em>ISO 8601</em> format.</p>"          }        ]      },      "examples": [        {          "title": "Example Response",          "content": "HTTP/1.1 201 Created\n{\n    \"id\": 1,\n    \"created_at\": \"2015-02-13T15:26:55+00:00\"\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/media/:id",    "title": "Get information about a media",    "version": "0.0.1",    "group": "Media",    "name": "ViewMedia",    "permission": [      {        "name": "User",        "title": "Authorized user.",        "description": "<p>Authorization can be done with using either <code>access_token</code> query string or <code>Authorization</code> header with <strong>Bearer</strong> token.</p>"      }    ],    "parameter": {      "fields": {        "Url Parameters": [          {            "group": "Url Parameters",            "type": "Integer",            "optional": false,            "field": "id",            "description": "<p>Id number of the media object.</p>"          }        ]      }    },    "success": {      "fields": {        "200 OK": [          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "id",            "description": "<p>Id number of the media object.</p>"          },          {            "group": "200 OK",            "type": "String",            "allowedValues": [              "single",              "multiple"            ],            "optional": false,            "field": "type",            "description": "<p>Type of the media object.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "caption",            "description": "<p>Caption of the media object.</p>"          },          {            "group": "200 OK",            "type": "Boolean",            "optional": false,            "field": "favorited",            "description": "<p>Specify if the media object is favorited by the authorized user.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "public_id",            "description": "<p>Public id number of the media object.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "public_url",            "description": "<p>Public (sharing) url of the media object.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "user",            "description": "<p>Owner user of the media object.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "user.id",            "description": "<p>Id number of the owner user.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "user.username",            "description": "<p>Username of the owner user.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "user.real_name",            "description": "<p>Real name of the owner user.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "user.screen_name",            "description": "<p>Screen name of the owner user.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "user.screen_speciality",            "description": "<p>Screen speciality of the owner user.</p>"          },          {            "group": "200 OK",            "type": "Boolean",            "optional": false,            "field": "user.verified",            "description": "<p>Specify if the owner user is verified.</p>"          },          {            "group": "200 OK",            "type": "Boolean",            "optional": false,            "field": "user.following",            "description": "<p>Specify if the owner user is followed by the authorized user.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "user.picture",            "description": "<p>Picture of the owner user (<code>null</code> if profile picture is not uploaded).</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "user.picture.url",            "description": "<p>Url of the profile picture.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "user.picture.width",            "description": "<p>Width of the profile picture.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "user.picture.height",            "description": "<p>Height of the profile picture.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "user.profession",            "description": "<p>Profession of the owner user.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "user.profession.id",            "description": "<p>Id number of the profession.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "user.profession.title",            "description": "<p>Title of the profession.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "user.speciality",            "description": "<p>Speciality of the owner user.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "user.speciality.id",            "description": "<p>Id number of the speciality.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "user.speciality.title",            "description": "<p>Title of the speciality.</p>"          },          {            "group": "200 OK",            "type": "Object[]",            "optional": false,            "field": "categories",            "description": "<p>List of the categories.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "categories.id",            "description": "<p>Id number of the category object.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "categories.title",            "description": "<p>Title of the category object.</p>"          },          {            "group": "200 OK",            "type": "Object[]",            "optional": false,            "field": "images",            "description": "<p>List of the images.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "images.thumbnail",            "description": "<p>Thumbnail image of the image object.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "images.thumbnail.url",            "description": "<p>Url of the thumbnail image.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "images.thumbnail.width",            "description": "<p>Width of the thumbnail image.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "images.thumbnail.height",            "description": "<p>Height of the thumbnail image.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "images.preview",            "description": "<p>Preview image of the image object.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "images.preview.url",            "description": "<p>Url of the preview image.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "images.preview.width",            "description": "<p>Width of the preview image.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "images.preview.height",            "description": "<p>Height of the preview image.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "images.full",            "description": "<p>Full image of the image object.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "images.full.url",            "description": "<p>Url of the full image.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "images.full.width",            "description": "<p>Width of the full image.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "images.full.height",            "description": "<p>Height of the full image.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "counts",            "description": "<p>Counters of the media object.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "counts.comments",            "description": "<p>Comment count of the media object.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "counts.favorites",            "description": "<p>Favorite count of the media object.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "counts.images",            "description": "<p>Image count of the media object.</p>"          },          {            "group": "200 OK",            "type": "Date",            "optional": false,            "field": "created_at",            "description": "<p>Creation date and time of the media object in <em>ISO 8601</em> format.</p>"          }        ]      },      "examples": [        {          "title": "Example Response",          "content": "HTTP/1.1 200 OK\n{\n    \"id\": 1,\n    \"type\": \"single\",\n    \"caption\": \"Örnek media.\",\n    \"favorited\": false,\n    \"public_id\": \"zwukbo4tdueug6svck1iek1uc1c-hy35\",\n    \"public_url\": \"https://app.medik.com/sharing/zwukbo4tdueug6svck1iek1uc1c-hy35\",\n    \"user\": {\n        \"id\": 1,\n        \"username\": \"hdogan\",\n        \"real_name\": \"Hidayet Doğan\",\n        \"screen_name\": \"Hidayet Doğan\",\n        \"screen_speciality\": \"Dermatoloji Hekimi\",\n        \"verified\": true,\n        \"following\": false,\n        \"picture\": {\n            \"url: \"https://api.example.com/uploads/media/zwukbo4tdueug6svck1iek1uc1c-hy35_150.jpg\",\n            \"width\": 150,\n            \"height\": 150\n        },\n        \"profession\": {\n            \"id\": 1,\n            \"title\": \"Hekim\"\n        },\n        \"speciality\": {\n            \"id\": 50,\n            \"title\": \"Dermatolog\"\n        }\n    },\n    \"categories\": [\n        {\n            \"id\": 1,\n            \"title\": \"Baş\"\n        },\n        {\n            \"id\": 2,\n            \"title\": \"Nefroloji\"\n        },\n    ],\n    \"images\": [\n        {\n            \"thumbnail\": {\n                \"url\": \"https://api.example.com/uploads/media/zwukbo4tdueug6svck1iek1uc1c-hy35_150.jpg\",\n                \"width\": 150,\n                \"height\": 150\n            },\n            \"preview\": {\n                \"url\": \"https://api.example.com/uploads/media/zwukbo4tdueug6svck1iek1uc1c-hy35_300.jpg\",\n                \"width\": 300,\n                \"height\": 450\n            },\n            \"full\": {\n                \"url\": \"https://api.example.com/uploads/media/zwukbo4tdueug6svck1iek1uc1c-hy35.jpg\",\n                \"width\": 1024,\n                \"height\": 1750\n            }\n        }\n    ],\n    \"counts\": {\n        \"comments\": 2,\n        \"favorites\": 1,\n        \"images\": 1\n    },\n    \"created_at\": \"2015-02-13T15:26:55+00:00\"\n}",          "type": "json"        }      ]    },    "filename": "controllers/MediaController.php",    "groupTitle": "Media",    "error": {      "fields": {        "401 Authorization Error": [          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "404 Not Found": [          {            "group": "404 Not Found",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "404 Not Found",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "404 Not Found",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "404 Not Found",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "500 Server Error": [          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ]      }    }  },  {    "type": "delete",    "url": "/users/self/notifications/:id",    "title": "Mark notification as read",    "description": "<p><code>404 Not Found</code> occurs if the notification object is not owned by the authorized user. If id parameter is not send, all notifications marked as read.</p>",    "version": "0.0.1",    "group": "Users",    "name": "ActivityDelete",    "permission": [      {        "name": "Owner",        "title": "Owner user of the object.",        "description": "<p>If the authorized user is not owner of the requested object 404 error occurs.</p>"      }    ],    "parameter": {      "fields": {        "Url Parameters": [          {            "group": "Url Parameters",            "type": "Integer",            "optional": true,            "field": "id",            "description": "<p>Id number of the notification object.</p>"          }        ]      }    },    "filename": "controllers/ActivityController.php",    "groupTitle": "Users",    "success": {      "fields": {        "204 No Content": [          {            "group": "204 No Content",            "optional": false,            "field": "N/A",            "description": "<p>N/A</p>"          }        ]      }    },    "error": {      "fields": {        "401 Authorization Error": [          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "404 Not Found": [          {            "group": "404 Not Found",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "404 Not Found",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "404 Not Found",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "404 Not Found",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "500 Server Error": [          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/users/self/notifications",    "title": "List of user notifications",    "version": "0.0.1",    "group": "Users",    "name": "ActivityIndex",    "permission": [      {        "name": "User",        "title": "Authorized user.",        "description": "<p>Authorization can be done with using either <code>access_token</code> query string or <code>Authorization</code> header with <strong>Bearer</strong> token.</p>"      }    ],    "success": {      "fields": {        "200 OK": [          {            "group": "200 OK",            "type": "Object[]",            "optional": false,            "field": "data",            "description": "<p>List of the notifications.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.id",            "description": "<p>Id number of the notification object.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.user",            "description": "<p>Activity maker of the notification object.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.user.id",            "description": "<p>Id number of the activity maker.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.user.username",            "description": "<p>Username of the activity maker.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.user.real_name",            "description": "<p>Real name of the activity maker.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.user.screen_name",            "description": "<p>Screen name of the activity maker.</p>"          },          {            "group": "200 OK",            "type": "Boolean",            "optional": false,            "field": "data.user.verified",            "description": "<p>Specify if activity maker is verified.</p>"          },          {            "group": "200 OK",            "type": "Boolean",            "optional": false,            "field": "data.user.following",            "description": "<p>Specify if authorized user is following activity maker.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.user.picture",            "description": "<p>Picture of the activity maker(<code>null</code> if profile picture is not uploaded).</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.user.picture.url",            "description": "<p>Url of the profile picture.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.user.picture.width",            "description": "<p>Width of the profile picture.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.user.picture.height",            "description": "<p>Height of the profile picture.</p>"          },          {            "group": "200 OK",            "type": "String",            "allowedValues": [              "comment",              "favorite",              "follow"            ],            "optional": false,            "field": "data.type",            "description": "<p>Type of the activity.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.object",            "description": "<p>Related object of the notification.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.object.id",            "description": "<p>Related object id.</p>"          },          {            "group": "200 OK",            "type": "String",            "allowedValues": [              "media",              "user"            ],            "optional": false,            "field": "data.object.type",            "description": "<p>Related object type</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.object.image",            "description": "<p>Image of the object (only if object type is <code>media</code>).</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.object.image.thumbnail",            "description": "<p>Thumbnail image of the image object.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.object.image.thumbnail.url",            "description": "<p>Url of the thumbnail image.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.object.image.thumbnail.width",            "description": "<p>Width of the thumbnail image.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.object.image.thumbnail.height",            "description": "<p>Height of the thumbnail image.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.object.image.preview",            "description": "<p>Preview image of the image object.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.object.image.preview.url",            "description": "<p>Url of the preview image.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.object.image.preview.width",            "description": "<p>Width of the preview image.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.object.image.preview.height",            "description": "<p>Height of the preview image.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.object.image.full",            "description": "<p>Full image of the image object.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.object.image.full.url",            "description": "<p>Url of the full image.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.object.image.full.width",            "description": "<p>Width of the full image.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.object.image.full.height",            "description": "<p>Height of the full image.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.message",            "description": "<p>Formatted message of the notification.</p>"          },          {            "group": "200 OK",            "type": "Date",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date and time of the notification object in <em>ISO 8601</em> format.</p>"          },          {            "group": "200 OK",            "type": "Date",            "optional": false,            "field": "data.read_at",            "description": "<p>Read date and time of the notification object in <em>ISO 8601</em> format.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "meta",            "description": "<p>Pagination information.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "meta.total_count",            "description": "<p>Total number of the records.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "meta.page_count",            "description": "<p>Total number of the pages.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "meta.current_page",            "description": "<p>Current page number.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "meta.per_page",            "description": "<p>Number of the records per page.</p>"          }        ]      },      "examples": [        {          "title": "Example Response",          "content": "HTTP/1.1 200 OK\n{\n    \"data\": [\n        {\n            \"id\": 1,\n            \"user\": {\n                \"id\": 2,\n                \"username\": \"ahmet\",\n                \"real_name\": \"\",\n                \"screen_name\": \"ahmet\",\n                \"verified\": true,\n                \"following\": false,\n                \"picture\": {\n                    \"url: \"https://api.example.com/uploads/profiles/zwukbo4tdueug6svck1iek1uc1c-hy35_150.jpg\",\n                    \"width\": 150,\n                    \"height\": 150\n                }\n            },\n            \"type\": \"follow\",\n            \"object\": {\n                \"id\": 1,\n                \"type\": \"user\",\n                \"image\": null\n            },\n            \"message\": \"ahmet seni takip etmeye başladı.\",\n            \"read_at\": \"2015-07-21T09:30:05+00:00\",\n            \"created_at\": \"2015-02-13T15:26:55+00:00\"\n        },\n        {\n            \"id\": 2,\n            \"user': {\n                \"id\": 1,\n                \"username\": \"hdogan\",\n                \"real_name\": \"Hidayet Doğan\",\n                \"screen_name\": \"Hidayet Doğan\",\n                \"verified\": false,\n                \"following\": true,\n                \"picture\": null\n            },\n            \"type\": \"comment\",\n            \"object\": {\n                \"id\": 2,\n                \"type\": \"media\",\n                \"image\": {\n                    \"thumbnail\": {\n                        \"url\": \"https://api.example.com/uploads/media/zwukbo4tdueug6svck1iek1uc1c-hy35_150.jpg\",\n                        \"width\": 150,\n                        \"height\": 150\n                    },\n                    \"preview\": {\n                        \"url\": \"https://api.example.com/uploads/media/zwukbo4tdueug6svck1iek1uc1c-hy35_300.jpg\",\n                        \"width\": 300,\n                        \"height\": 450\n                    },\n                    \"full\": {\n                        \"url\": \"https://api.example.com/uploads/media/zwukbo4tdueug6svck1iek1uc1c-hy35.jpg\",\n                        \"width\": 1024,\n                        \"height\": 1750\n                    }\n                }\n            },\n            \"message\": \"hdogan gönderine yeni bir yorum gönderdi.\",\n            \"read_at\": null,\n            \"created_at\": \"2015-02-13T15:26:55+00:00\"\n        },\n    ],\n    \"meta\": {\n        \"total_count\": 2,\n        \"page_count\": 1,\n        \"current_page\": 1,\n        \"per_page\": 50\n    }\n}",          "type": "json"        }      ]    },    "filename": "controllers/ActivityController.php",    "groupTitle": "Users",    "parameter": {      "fields": {        "Query String Parameters": [          {            "group": "Query String Parameters",            "type": "Integer",            "optional": true,            "field": "page",            "description": "<p>Page number.</p>"          },          {            "group": "Query String Parameters",            "type": "Integer",            "optional": true,            "field": "per_page",            "description": "<p>Number of the records per page.</p>"          }        ]      }    },    "error": {      "fields": {        "401 Authorization Error": [          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "500 Server Error": [          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/users/:id/comments",    "title": "List of user comments",    "version": "0.0.1",    "group": "Users",    "name": "CommentsUser",    "permission": [      {        "name": "User",        "title": "Authorized user.",        "description": "<p>Authorization can be done with using either <code>access_token</code> query string or <code>Authorization</code> header with <strong>Bearer</strong> token.</p>"      }    ],    "parameter": {      "fields": {        "Url Parameters": [          {            "group": "Url Parameters",            "type": "Integer",            "optional": false,            "field": "id",            "description": "<p>Id number of the user object.</p>"          }        ],        "Query String Parameters": [          {            "group": "Query String Parameters",            "type": "Integer",            "optional": true,            "field": "page",            "description": "<p>Page number.</p>"          },          {            "group": "Query String Parameters",            "type": "Integer",            "optional": true,            "field": "per_page",            "description": "<p>Number of the records per page.</p>"          }        ]      }    },    "success": {      "fields": {        "200 OK": [          {            "group": "200 OK",            "type": "Object[]",            "optional": false,            "field": "data",            "description": "<p>List of the comments.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.id",            "description": "<p>Id number of the comment object.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.text",            "description": "<p>Text of the comment object.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.score",            "description": "<p>Score of the comment object.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.media",            "description": "<p>Media of the comment object.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.media.id",            "description": "<p>Id number of the media.</p>"          },          {            "group": "200 OK",            "type": "String",            "allowedValues": [              "single",              "multiple"            ],            "optional": false,            "field": "data.media.type",            "description": "<p>Type of the media.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.media.image",            "description": "<p>Image of the media.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.media.image.url",            "description": "<p>Url of the image.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.media.image.width",            "description": "<p>Width of the image.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.media.image.height",            "description": "<p>Height of the image.</p>"          },          {            "group": "200 OK",            "type": "Date",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date and time of the comment object in <em>ISO 8601</em> format.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "meta",            "description": "<p>Pagination information.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "meta.total_count",            "description": "<p>Total number of the records.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "meta.page_count",            "description": "<p>Total number of the pages.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "meta.current_page",            "description": "<p>Current page number.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "meta.per_page",            "description": "<p>Number of the records per page.</p>"          }        ]      },      "examples": [        {          "title": "Example Response",          "content": "HTTP/1.1 200 OK\n{\n    \"data\": [\n        {\n            \"id\": 1,\n            \"text\": \"Örnek yorum.\",\n            \"score\": 5,\n            \"media\": {\n                \"id\": 1,\n                \"type\": \"single\",\n                \"image\": {\n                    \"url\": \"https://api.example.com/uploads/media/zwukbo4tdueug6svck1iek1uc1c-hy35_150.jpg\",\n                    \"width\": 150,\n                    \"height\": 150\n                }\n            },\n            \"created_at\": \"2015-02-13T15:26:55+00:00\"\n        },\n        {\n            \"id\": 2,\n            \"text\": \"Diğer yorum.\",\n            \"score\": 0,\n            \"media\": {\n                \"id\": 2,\n                \"type\": \"multiple\",\n                \"image\": {\n                    \"url\": \"https://api.example.com/uploads/media/zwukbo4tdueug6svck1iek1uc1c-hy35_150.jpg\",\n                    \"width\": 150,\n                    \"height\": 150\n                }\n            },\n            \"created_at\": \"2015-02-13T15:26:55+00:00\"\n        }\n    ],\n    \"meta\": {\n        \"total_count\": 2,\n        \"page_count\": 1,\n        \"current_page\": 1,\n        \"per_page\": 50\n    }\n}",          "type": "json"        }      ]    },    "filename": "controllers/UserController.php",    "groupTitle": "Users",    "error": {      "fields": {        "401 Authorization Error": [          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "500 Server Error": [          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ]      }    }  },  {    "type": "post",    "url": "/users/self/following/:user_id",    "title": "Follow an user",    "description": "<p><code>422 Data Validation Error</code> occurs if the user object does not exists or the user object is already followed by the authorized user.</p>",    "version": "0.0.1",    "group": "Users",    "name": "CreateFollow",    "permission": [      {        "name": "User",        "title": "Authorized user.",        "description": "<p>Authorization can be done with using either <code>access_token</code> query string or <code>Authorization</code> header with <strong>Bearer</strong> token.</p>"      }    ],    "parameter": {      "fields": {        "Url Parameters": [          {            "group": "Url Parameters",            "type": "Integer",            "optional": false,            "field": "user_id",            "description": "<p>Id number of the user object.</p>"          }        ]      }    },    "error": {      "examples": [        {          "title": "Example Validation Error Response",          "content": "HTTP/1.1 422 Data Validation Failed.\n[\n    {\n        \"message\": \"User Id does not exist.\",\n        \"field\": \"user_id\"\n    }\n]",          "type": "json"        }      ],      "fields": {        "401 Authorization Error": [          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "422 Data Validation Error": [          {            "group": "422 Data Validation Error",            "type": "Object[]",            "optional": false,            "field": "error",            "description": "<p>Data validation error object.</p>"          },          {            "group": "422 Data Validation Error",            "type": "String",            "optional": false,            "field": "error.message",            "description": "<p>Message of the error.</p>"          },          {            "group": "422 Data Validation Error",            "type": "String",            "optional": false,            "field": "error.field",            "description": "<p>Field name of the error.</p>"          }        ],        "500 Server Error": [          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ]      }    },    "filename": "controllers/FollowController.php",    "groupTitle": "Users",    "success": {      "fields": {        "201 Created": [          {            "group": "201 Created",            "type": "Integer",            "optional": false,            "field": "id",            "description": "<p>Id number of the object.</p>"          },          {            "group": "201 Created",            "type": "Date",            "optional": false,            "field": "created_at",            "description": "<p>Creation date and time of the object in <em>ISO 8601</em> format.</p>"          }        ]      },      "examples": [        {          "title": "Example Response",          "content": "HTTP/1.1 201 Created\n{\n    \"id\": 1,\n    \"created_at\": \"2015-02-13T15:26:55+00:00\"\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/users/self/picture",    "title": "Upload user profile picture",    "version": "0.0.1",    "group": "Users",    "name": "CreatePicture",    "permission": [      {        "name": "Owner",        "title": "Owner user of the object.",        "description": "<p>If the authorized user is not owner of the requested object 404 error occurs.</p>"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "allowedValues": [              "multipart/form-data"            ],            "optional": false,            "field": "Content-Type",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "file",            "description": "<p>Picture file of the user object.</p>"          }        ]      }    },    "success": {      "fields": {        "200 OK": [          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "id",            "description": "<p>Id number of the user object.</p>"          },          {            "group": "200 OK",            "type": "Date",            "optional": false,            "field": "updated_at",            "description": "<p>Update date and time of the user object in <em>ISO 8601</em> format.</p>"          }        ]      },      "examples": [        {          "title": "Example Response",          "content": "HTTP/1.1 200 OK\n{\n    \"id\": 1,\n    \"updated_at\": \"2015-02-13T15:26:55+00:00\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Example Validation Error Response",          "content": "HTTP/1.1 422 Data Validation Failed.\n[\n    \"message\": \"Geçersiz Profil Fotoğrafı\",\n    \"field\": \"file\"\n]",          "type": "json"        }      ],      "fields": {        "401 Authorization Error": [          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "422 Data Validation Error": [          {            "group": "422 Data Validation Error",            "type": "Object[]",            "optional": false,            "field": "error",            "description": "<p>Data validation error object.</p>"          },          {            "group": "422 Data Validation Error",            "type": "String",            "optional": false,            "field": "error.message",            "description": "<p>Message of the error.</p>"          },          {            "group": "422 Data Validation Error",            "type": "String",            "optional": false,            "field": "error.field",            "description": "<p>Field name of the error.</p>"          }        ],        "500 Server Error": [          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ]      }    },    "filename": "controllers/UserController.php",    "groupTitle": "Users"  },  {    "type": "post",    "url": "/users",    "title": "Create an user",    "version": "0.0.1",    "group": "Users",    "name": "CreateUser",    "permission": [      {        "name": "Client Credentials"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>Username of the user.</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "6..",            "optional": false,            "field": "password",            "description": "<p>Password of the user.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>E-Mail address of the user.</p>"          },          {            "group": "Parameter",            "type": "Integer",            "optional": true,            "field": "speciality_id",            "description": "<p>Id number of the speciality.</p>"          }        ]      }    },    "success": {      "fields": {        "201 Created": [          {            "group": "201 Created",            "type": "Integer",            "optional": false,            "field": "id",            "description": "<p>Id number of the user object.</p>"          },          {            "group": "201 Created",            "type": "Boolean",            "optional": false,            "field": "verified",            "description": "<p>Specify if the user object is verified.</p>"          },          {            "group": "201 Created",            "type": "Date",            "optional": false,            "field": "created_at",            "description": "<p>Creation date and time of the user object in <em>ISO 8601</em> format.</p>"          }        ]      },      "examples": [        {          "title": "Example Response",          "content": "HTTP/1.1 201 Created\nLocation: https://api.example.com/users/1\n{\n    \"id\": 1,\n    \"created_at\": \"2015-02-13T15:26:55+00:00\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Example Validation Error Response",          "content": "HTTP/1.1 422 Data Validation Failed.\n[\n    \"message\": \"email\",\n    \"field\": \"Geçersiz e-posta adresi.\"\n]",          "type": "json"        }      ],      "fields": {        "422 Data Validation Error": [          {            "group": "422 Data Validation Error",            "type": "Object[]",            "optional": false,            "field": "error",            "description": "<p>Data validation error object.</p>"          },          {            "group": "422 Data Validation Error",            "type": "String",            "optional": false,            "field": "error.message",            "description": "<p>Message of the error.</p>"          },          {            "group": "422 Data Validation Error",            "type": "String",            "optional": false,            "field": "error.field",            "description": "<p>Field name of the error.</p>"          }        ],        "500 Server Error": [          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ]      }    },    "filename": "controllers/UserController.php",    "groupTitle": "Users"  },  {    "type": "post",    "url": "/users/self/verify",    "title": "Submit verification request",    "description": "<p><code>422 Data Validation Error</code> occurs if the user is already validated or has a verification request before.</p>",    "version": "0.0.1",    "group": "Users",    "name": "CreateVerification",    "permission": [      {        "name": "User",        "title": "Authorized user.",        "description": "<p>Authorization can be done with using either <code>access_token</code> query string or <code>Authorization</code> header with <strong>Bearer</strong> token.</p>"      }    ],    "filename": "controllers/VerificationController.php",    "groupTitle": "Users",    "success": {      "fields": {        "201 Created": [          {            "group": "201 Created",            "type": "Integer",            "optional": false,            "field": "id",            "description": "<p>Id number of the object.</p>"          },          {            "group": "201 Created",            "type": "Date",            "optional": false,            "field": "created_at",            "description": "<p>Creation date and time of the object in <em>ISO 8601</em> format.</p>"          }        ]      },      "examples": [        {          "title": "Example Response",          "content": "HTTP/1.1 201 Created\n{\n    \"id\": 1,\n    \"created_at\": \"2015-02-13T15:26:55+00:00\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "401 Authorization Error": [          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "422 Data Validation Error": [          {            "group": "422 Data Validation Error",            "type": "Object[]",            "optional": false,            "field": "error",            "description": "<p>Data validation error object.</p>"          },          {            "group": "422 Data Validation Error",            "type": "String",            "optional": false,            "field": "error.message",            "description": "<p>Message of the error.</p>"          },          {            "group": "422 Data Validation Error",            "type": "String",            "optional": false,            "field": "error.field",            "description": "<p>Field name of the error.</p>"          }        ],        "500 Server Error": [          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ]      }    }  },  {    "type": "delete",    "url": "/users/self/following/:user_id",    "title": "Unfollow an user",    "description": "<p><code>404 Not Found</code> occurs if the user object is not followed by the authorized user.</p>",    "version": "0.0.1",    "group": "Users",    "name": "DeleteFollow",    "permission": [      {        "name": "Owner",        "title": "Owner user of the object.",        "description": "<p>If the authorized user is not owner of the requested object 404 error occurs.</p>"      }    ],    "parameter": {      "fields": {        "Url Parameters": [          {            "group": "Url Parameters",            "type": "Integer",            "optional": false,            "field": "user_id",            "description": "<p>Id number of the user object.</p>"          }        ]      }    },    "filename": "controllers/FollowController.php",    "groupTitle": "Users",    "success": {      "fields": {        "204 No Content": [          {            "group": "204 No Content",            "optional": false,            "field": "N/A",            "description": "<p>N/A</p>"          }        ]      }    },    "error": {      "fields": {        "401 Authorization Error": [          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "404 Not Found": [          {            "group": "404 Not Found",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "404 Not Found",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "404 Not Found",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "404 Not Found",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "500 Server Error": [          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ]      }    }  },  {    "type": "delete",    "url": "/users/self/picture",    "title": "Delete user profile picture",    "version": "0.0.1",    "group": "Users",    "name": "DeletePicture",    "permission": [      {        "name": "Owner",        "title": "Owner user of the object.",        "description": "<p>If the authorized user is not owner of the requested object 404 error occurs.</p>"      }    ],    "filename": "controllers/UserController.php",    "groupTitle": "Users",    "success": {      "fields": {        "204 No Content": [          {            "group": "204 No Content",            "optional": false,            "field": "N/A",            "description": "<p>N/A</p>"          }        ]      }    },    "error": {      "fields": {        "401 Authorization Error": [          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "404 Not Found": [          {            "group": "404 Not Found",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "404 Not Found",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "404 Not Found",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "404 Not Found",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "500 Server Error": [          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/users/:id/favorites",    "title": "List of user favorites",    "version": "0.0.1",    "group": "Users",    "name": "FavoritesUser",    "parameter": {      "fields": {        "Url Parameters": [          {            "group": "Url Parameters",            "type": "Integer",            "optional": false,            "field": "id",            "description": "<p>Id number of the user object.</p>"          }        ],        "Query String Parameters": [          {            "group": "Query String Parameters",            "type": "Integer",            "optional": true,            "field": "page",            "description": "<p>Page number.</p>"          },          {            "group": "Query String Parameters",            "type": "Integer",            "optional": true,            "field": "per_page",            "description": "<p>Number of the records per page.</p>"          }        ]      }    },    "success": {      "fields": {        "200 OK": [          {            "group": "200 OK",            "type": "Object[]",            "optional": false,            "field": "data",            "description": "<p>List of user favorites.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.id",            "description": "<p>Id number of the media object.</p>"          },          {            "group": "200 OK",            "type": "String",            "allowedValues": [              "single",              "multiple"            ],            "optional": false,            "field": "data.type",            "description": "<p>Type of the media object.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.image",            "description": "<p>Image of the media object.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.image.url",            "description": "<p>Url of the image.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.image.width",            "description": "<p>Width of the image.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.image.height",            "description": "<p>Height of the image.</p>"          },          {            "group": "200 OK",            "type": "Date",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date and time of the favorite object in <em>ISO 8601</em> format.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "meta",            "description": "<p>Pagination information.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "meta.total_count",            "description": "<p>Total number of the records.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "meta.page_count",            "description": "<p>Total number of the pages.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "meta.current_page",            "description": "<p>Current page number.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "meta.per_page",            "description": "<p>Number of the records per page.</p>"          }        ]      },      "examples": [        {          "title": "Example Response",          "content": "HTTP/1.1 200 OK\n{\n    \"data\": [\n        {\n            \"id\": 1,\n            \"type\": \"single\",\n            \"image\": {\n                \"url\": \"https://api.example.com/uploads/media/zwukbo4tdueug6svck1iek1uc1c-hy35_150.jpg\",\n                \"width\": 150,\n                \"height\": 150\n            },\n            \"created_at\": \"2015-02-13T15:26:55+00:00\"\n        },\n        {\n            \"id\": 2,\n            \"type\": \"multiple\",\n            \"image\": {\n                \"url\": \"https://api.example.com/uploads/media/zwukbo4tdueug6svck1iek1uc1c-hy35_150.jpg\",\n                \"width\": 150,\n                \"height\": 150\n            },\n            \"created_at\": \"2015-02-13T15:26:55+00:00\"\n        }\n    ],\n    \"meta\": {\n        \"total_count\": 2,\n        \"page_count\": 1,\n        \"current_page\": 1,\n        \"per_page\": 80\n    }\n}",          "type": "json"        }      ]    },    "filename": "controllers/UserController.php",    "groupTitle": "Users",    "error": {      "fields": {        "401 Authorization Error": [          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "500 Server Error": [          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/users/self/feed",    "title": "User media feed",    "version": "0.0.1",    "group": "Users",    "name": "FeedUser",    "permission": [      {        "name": "User",        "title": "Authorized user.",        "description": "<p>Authorization can be done with using either <code>access_token</code> query string or <code>Authorization</code> header with <strong>Bearer</strong> token.</p>"      }    ],    "filename": "controllers/UserController.php",    "groupTitle": "Users",    "success": {      "fields": {        "200 OK": [          {            "group": "200 OK",            "type": "Object[]",            "optional": false,            "field": "data",            "description": "<p>List of media.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.id",            "description": "<p>Id number of media media.</p>"          },          {            "group": "200 OK",            "type": "String",            "allowedValues": [              "single",              "multiple"            ],            "optional": false,            "field": "data.type",            "description": "<p>Type of the media.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.caption",            "description": "<p>Caption of the media.</p>"          },          {            "group": "200 OK",            "type": "Boolean",            "optional": false,            "field": "data.favorited",            "description": "<p>Specify if the media is favorited by the user.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.public_id",            "description": "<p>Public id of the media.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.public_url",            "description": "<p>Public (sharing) url of the media.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.user",            "description": "<p>User of the media.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.user.id",            "description": "<p>Id number of the user.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.user.username",            "description": "<p>Username of the user.</p>"          },          {            "group": "200 OK",            "type": "Boolean",            "optional": false,            "field": "data.user.verified",            "description": "<p>Specify if the user is verified.</p>"          },          {            "group": "200 OK",            "type": "Boolean",            "optional": false,            "field": "data.user.following",            "description": "<p>Specify if the user is followed.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.user.real_name",            "description": "<p>Real name of the user.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.user.screen_name",            "description": "<p>Screen name of the user.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.user.screen_speciality",            "description": "<p>Screen speciality of the user.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.user.picture",            "description": "<p>Picture of the user (<code>null</code> if profile picture is not uploaded).</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.user.picture.url",            "description": "<p>Url of the profile picture.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.user.picture.width",            "description": "<p>Width of the profile picture.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.user.picture.height",            "description": "<p>Height of the profile picture.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.user.profession",            "description": "<p>Profession of the user.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.user.profession.id",            "description": "<p>Id number of the profession.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.user.profession.title",            "description": "<p>Title of the profession.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.user.speciality",            "description": "<p>Speciality of the user.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.user.speciality.id",            "description": "<p>Id number of the speciality.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.user.speciality.title",            "description": "<p>Title of the speciality.</p>"          },          {            "group": "200 OK",            "type": "Object[]",            "optional": false,            "field": "data.categories",            "description": "<p>List of categories.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.categories.id",            "description": "<p>Id number of the category.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.categories.title",            "description": "<p>Title of the category.</p>"          },          {            "group": "200 OK",            "type": "Object[]",            "optional": false,            "field": "data.images",            "description": "<p>List of images.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.images.thumbnail",            "description": "<p>Thumbnail image of the image.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.images.thumbnail.url",            "description": "<p>Url of the thumbnail image.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.images.thumbnail.width",            "description": "<p>Width of the thumbnail image.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.images.thumbnail.height",            "description": "<p>Height of the thumbnail image.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.images.preview",            "description": "<p>Preview image of the image.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.images.preview.url",            "description": "<p>Url of the preview image.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.images.preview.width",            "description": "<p>Width of the preview image.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.images.preview.height",            "description": "<p>Height of the preview image.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.images.full",            "description": "<p>Full image of the image.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.images.full.url",            "description": "<p>Url of the full image.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.images.full.width",            "description": "<p>Width of the full image.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.images.full.height",            "description": "<p>Height of the full image.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.counts",            "description": "<p>Counters of the media.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.counts.comments",            "description": "<p>Comment count of the media.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.counts.favorites",            "description": "<p>Favorite count of the media.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.counts.images",            "description": "<p>Image count of the media.</p>"          },          {            "group": "200 OK",            "type": "Date",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date and time of the media in <em>ISO 8601</em> format.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "meta",            "description": "<p>Pagination information.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "meta.total_count",            "description": "<p>Total number of the records.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "meta.page_count",            "description": "<p>Total number of the pages.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "meta.current_page",            "description": "<p>Current page number.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "meta.per_page",            "description": "<p>Number of the records per page.</p>"          }        ]      },      "examples": [        {          "title": "Example Response",          "content": "HTTP/1.1 200 OK\n{\n    \"data\": [\n        {\n            \"id\": 1,\n            \"type\": \"single\",\n            \"caption\": \"Örnek media.\",\n            \"favorited\": true,\n            \"public_id\": \"zwukbo4tdueug6svck1iek1uc1c-hy35\",\n            \"public_url\": \"https://app.medik.com/sharing/zwukbo4tdueug6svck1iek1uc1c-hy35\",\n            \"user\": {\n                \"id\": 1,\n                \"username\": \"hdogan\",\n                \"real_name\": \"Hidayet Doğan\",\n                \"screen_name\": \"Hidayet Doğan\",\n                \"screen_speciality\": \"Dermatoloji Hekimi\",\n                \"verified\": true,\n                \"following\": false,\n                \"picture\": {\n                    \"url\": \"https://api.example.com/uploads/profiles/zwukbo4tdueug6svck1iek1uc1c-hy35_150.jpg\",\n                    \"width\": 150,\n                    \"height\": 150\n                },\n                \"profession\": {\n                    \"id\": 1,\n                    \"title\": \"Hekim\"\n                },\n                \"speciality\": {\n                    \"id\": 10,\n                    \"title\": \"Dermatolog\"\n                }\n            },\n            \"categories\": [\n                {\n                    \"id\": 1,\n                    \"title\": \"Burun\"\n                },\n                {\n                    \"id\": 2,\n                    \"title\": \"Nefroloji\"\n                }\n            ],\n            \"images\": [\n                {\n                    \"thumbnail\": {\n                        \"url\": \"https://api.example.com/uploads/media/zwukbo4tdueug6svck1iek1uc1c-hy35_150.jpg\",\n                        \"width\": 150,\n                        \"height\": 150\n                    },\n                    \"preview\": {\n                        \"url\": \"https://api.example.com/uploads/media/zwukbo4tdueug6svck1iek1uc1c-hy35_300.jpg\",\n                        \"width\": 300,\n                        \"height\": 200\n                    },\n                    \"full\": {\n                        \"url\": \"https://api.example.com/uploads/media/zwukbo4tdueug6svck1iek1uc1c-hy35.jpg\",\n                        \"width\": 1024,\n                        \"height\": 700\n                    }\n                }\n            ],\n            \"counts\": {\n                \"comments\": 2,\n                \"favorites\": 1,\n                \"images\": 1\n            },\n            \"created_at\": \"2015-02-13T15:26:55+00:00\"\n        }\n    ],\n    \"meta\": {\n        \"total_count\": 1,\n        \"page_count\": 1,\n        \"current_page\": 1,\n        \"per_page\": 10\n    }\n}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Query String Parameters": [          {            "group": "Query String Parameters",            "type": "Integer",            "optional": true,            "field": "page",            "description": "<p>Page number.</p>"          },          {            "group": "Query String Parameters",            "type": "Integer",            "optional": true,            "field": "per_page",            "description": "<p>Number of the records per page.</p>"          }        ]      }    },    "error": {      "fields": {        "401 Authorization Error": [          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "500 Server Error": [          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/users/:id/followers",    "title": "List of user followers",    "version": "0.0.1",    "group": "Users",    "name": "FollowersUser",    "parameter": {      "fields": {        "Url Parameters": [          {            "group": "Url Parameters",            "type": "Integer",            "optional": false,            "field": "id",            "description": "<p>Id number of the user object.</p>"          }        ],        "Query String Parameters": [          {            "group": "Query String Parameters",            "type": "Integer",            "optional": true,            "field": "page",            "description": "<p>Page number.</p>"          },          {            "group": "Query String Parameters",            "type": "Integer",            "optional": true,            "field": "per_page",            "description": "<p>Number of the records per page.</p>"          }        ]      }    },    "success": {      "fields": {        "200 OK": [          {            "group": "200 OK",            "type": "Object[]",            "optional": false,            "field": "data",            "description": "<p>List of user followers.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.id",            "description": "<p>Id number of the follower object.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.username",            "description": "<p>Username of the follower object.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.real_name",            "description": "<p>Real name of the follower object.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.screen_name",            "description": "<p>Screen name of the follower object.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.screen_speciality",            "description": "<p>Screen speciality of the follower object.</p>"          },          {            "group": "200 OK",            "type": "Boolean",            "optional": false,            "field": "data.verified",            "description": "<p>Specify if the follower user is verified.</p>"          },          {            "group": "200 OK",            "type": "Boolean",            "optional": false,            "field": "data.following",            "description": "<p>Specify if the follower user is followed by the authorized user.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.picture",            "description": "<p>Picture of the follower user (<code>null</code> if profile picture is not uploaded).</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.picture.url",            "description": "<p>Url of the profile picture.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.picture.width",            "description": "<p>Width of the profile picture.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.picture.height",            "description": "<p>Height of the profile picture.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.profession",            "description": "<p>Profession of the follower user.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.profession.id",            "description": "<p>Id number of the profession.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.profession.title",            "description": "<p>Title of the profession.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.speciality",            "description": "<p>Speciality of the follower user.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.speciality.id",            "description": "<p>Id number of the speciality.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.speciality.title",            "description": "<p>Title of the speciality.</p>"          },          {            "group": "200 OK",            "type": "Date",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date and time of the follow object in <em>ISO 8601</em> format.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "meta",            "description": "<p>Pagination information.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "meta.total_count",            "description": "<p>Total number of the records.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "meta.page_count",            "description": "<p>Total number of the pages.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "meta.current_page",            "description": "<p>Current page number.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "meta.per_page",            "description": "<p>Number of the records per page.</p>"          }        ]      },      "examples": [        {          "title": "Example Response",          "content": "HTTP/1.1 200 OK\n{\n    \"data\": [\n        {\n            \"id\": 1,\n            \"username\": \"hdogan\",\n            \"real_name\": \"Hidayet Doğan\",\n            \"screen_name\": \"Hidayet Doğan\",\n            \"screen_speciality\": \"Aile Hekimi\",\n            \"verified\": true,\n            \"following\": false,\n            \"picture\": {\n                \"url: \"https://api.example.com/uploads/media/zwukbo4tdueug6svck1iek1uc1c-hy35_150.jpg\",\n                \"width\": 150,\n                \"height\": 150\n            },\n            \"profession\": {\n                \"id\": 1,\n                \"title\": \"Hekim\"\n            },\n            \"speciality\": {\n                \"id\": 1,\n                \"title\": \"Aile Hekimliği\"\n            },\n            \"created_at\": \"2015-02-13T15:26:55+00:00\"\n        },\n        {\n            \"id\": 1,\n            \"username\": \"cigdem\",\n            \"real_name\": \"\",\n            \"screen_name\": \"cigdem\",\n            \"screen_speciality\": \"Diğer Sağlık Çalışanı\",\n            \"verified\": false,\n            \"following\": true,\n            \"picture\": null,\n            \"profession\": {\n                \"id\": 1,\n                \"title\": \"Diğer Sağlık Çalışanı\"\n            },\n            \"speciality\": null,\n            \"created_at\": \"2015-02-13T15:26:55+00:00\"\n        },\n    ],\n    \"meta\": {\n        \"total_count\": 2,\n        \"page_count\": 1,\n        \"current_page\": 1,\n        \"per_page\": 50\n    }\n}",          "type": "json"        }      ]    },    "filename": "controllers/UserController.php",    "groupTitle": "Users",    "error": {      "fields": {        "401 Authorization Error": [          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "500 Server Error": [          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/users/:id/following",    "title": "List of user following",    "version": "0.0.1",    "group": "Users",    "name": "FollowingUser",    "parameter": {      "fields": {        "Url Parameters": [          {            "group": "Url Parameters",            "type": "Integer",            "optional": false,            "field": "id",            "description": "<p>Id number of the user object.</p>"          }        ],        "Query String Parameters": [          {            "group": "Query String Parameters",            "type": "Integer",            "optional": true,            "field": "page",            "description": "<p>Page number.</p>"          },          {            "group": "Query String Parameters",            "type": "Integer",            "optional": true,            "field": "per_page",            "description": "<p>Number of the records per page.</p>"          }        ]      }    },    "success": {      "fields": {        "200 OK": [          {            "group": "200 OK",            "type": "Object[]",            "optional": false,            "field": "data",            "description": "<p>List of user following.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.id",            "description": "<p>Id number of the following object.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.username",            "description": "<p>Username of the following object.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.real_name",            "description": "<p>Real name of the following object.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.screen_name",            "description": "<p>Screen name of the following object.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.screen_speciality",            "description": "<p>Screen speciality of the following object.</p>"          },          {            "group": "200 OK",            "type": "Boolean",            "optional": false,            "field": "data.verified",            "description": "<p>Specify if the following user is verified.</p>"          },          {            "group": "200 OK",            "type": "Boolean",            "optional": false,            "field": "data.following",            "description": "<p>Specify if the following user is followed by the authorized user.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.picture",            "description": "<p>Picture of the following user (<code>null</code> if profile picture is not uploaded).</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.picture.url",            "description": "<p>Url of the profile picture.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.picture.width",            "description": "<p>Width of the profile picture.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.picture.height",            "description": "<p>Height of the profile picture.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.profession",            "description": "<p>Profession of the following user.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.profession.id",            "description": "<p>Id number of the profession.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.profession.title",            "description": "<p>Title of the profession.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.speciality",            "description": "<p>Speciality of the following user.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.speciality.id",            "description": "<p>Id number of the speciality.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.speciality.title",            "description": "<p>Title of the speciality.</p>"          },          {            "group": "200 OK",            "type": "Date",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date and time of the follow object in <em>ISO 8601</em> format.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "meta",            "description": "<p>Pagination information.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "meta.total_count",            "description": "<p>Total number of the records.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "meta.page_count",            "description": "<p>Total number of the pages.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "meta.current_page",            "description": "<p>Current page number.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "meta.per_page",            "description": "<p>Number of the records per page.</p>"          }        ]      },      "examples": [        {          "title": "Example Response",          "content": "HTTP/1.1 200 OK\n{\n    \"data\": [\n        {\n            \"id\": 1,\n            \"username\": \"hdogan\",\n            \"real_name\": \"Hidayet Doğan\",\n            \"screen_name\": \"Hidayet Doğan\",\n            \"screen_speciality\": \"Aile Hekimi\",\n            \"verified\": true,\n            \"following\": false,\n            \"picture\": {\n                \"url: \"https://api.example.com/uploads/media/zwukbo4tdueug6svck1iek1uc1c-hy35_150.jpg\",\n                \"width\": 150,\n                \"height\": 150\n            },\n            \"profession\": {\n                \"id\": 1,\n                \"title\": \"Hekim\"\n            },\n            \"speciality\": {\n                \"id\": 1,\n                \"title\": \"Aile Hekimliği\"\n            },\n            \"created_at\": \"2015-02-13T15:26:55+00:00\"\n        },\n        {\n            \"id\": 1,\n            \"username\": \"cigdem\",\n            \"real_name\": \"\",\n            \"screen_name\": \"cigdem\",\n            \"screen_speciality\": \"Diğer Sağlık Çalışanı\",\n            \"verified\": false,\n            \"following\": true,\n            \"picture\": null,\n            \"profession\": {\n                \"id\": 1,\n                \"title\": \"Diğer Sağlık Çalışanı\"\n            },\n            \"speciality\": null,\n            \"created_at\": \"2015-02-13T15:26:55+00:00\"\n        },\n    ],\n    \"meta\": {\n        \"total_count\": 2,\n        \"page_count\": 1,\n        \"current_page\": 1,\n        \"per_page\": 50\n    }\n}",          "type": "json"        }      ]    },    "filename": "controllers/UserController.php",    "groupTitle": "Users",    "error": {      "fields": {        "401 Authorization Error": [          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "500 Server Error": [          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/users/self/specialities",    "title": "List of specialities",    "description": "<p>This resource only returns specialities related with the user profession.</p>",    "version": "0.0.1",    "group": "Users",    "name": "IndexSpeciality",    "permission": [      {        "name": "User",        "title": "Authorized user.",        "description": "<p>Authorization can be done with using either <code>access_token</code> query string or <code>Authorization</code> header with <strong>Bearer</strong> token.</p>"      }    ],    "success": {      "fields": {        "200 OK": [          {            "group": "200 OK",            "type": "Object[]",            "optional": false,            "field": "data",            "description": "<p>List of specialities.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.id",            "description": "<p>Id number of the speciality object.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.title",            "description": "<p>Title of the speciality object.</p>"          }        ]      },      "examples": [        {          "title": "Example Response",          "content": "HTTP/1.1 200 OK\n{\n    \"data\": [\n        {\n            \"id\": 1,\n            \"title\": \"Kulak Burun Boğaz\"\n        },\n        {\n            \"id\": 2,\n            \"title\": \"Aile Hekimliği\"\n        }\n    ]\n}",          "type": "json"        }      ]    },    "filename": "controllers/SpecialityController.php",    "groupTitle": "Users",    "error": {      "fields": {        "500 Server Error": [          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/users/:id/media",    "title": "List of user media",    "version": "0.0.1",    "group": "Users",    "name": "MediaUser",    "parameter": {      "fields": {        "Url Parameters": [          {            "group": "Url Parameters",            "type": "Integer",            "optional": false,            "field": "id",            "description": "<p>Id number of the user object.</p>"          }        ],        "Query String Parameters": [          {            "group": "Query String Parameters",            "type": "Integer",            "optional": true,            "field": "page",            "description": "<p>Page number.</p>"          },          {            "group": "Query String Parameters",            "type": "Integer",            "optional": true,            "field": "per_page",            "description": "<p>Number of the records per page.</p>"          }        ]      }    },    "filename": "controllers/UserController.php",    "groupTitle": "Users",    "success": {      "fields": {        "200 OK": [          {            "group": "200 OK",            "type": "Object[]",            "optional": false,            "field": "data",            "description": "<p>List of media.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.id",            "description": "<p>Id number of media media.</p>"          },          {            "group": "200 OK",            "type": "String",            "allowedValues": [              "single",              "multiple"            ],            "optional": false,            "field": "data.type",            "description": "<p>Type of the media.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.caption",            "description": "<p>Caption of the media.</p>"          },          {            "group": "200 OK",            "type": "Boolean",            "optional": false,            "field": "data.favorited",            "description": "<p>Specify if the media is favorited by the user.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.public_id",            "description": "<p>Public id of the media.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.public_url",            "description": "<p>Public (sharing) url of the media.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.user",            "description": "<p>User of the media.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.user.id",            "description": "<p>Id number of the user.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.user.username",            "description": "<p>Username of the user.</p>"          },          {            "group": "200 OK",            "type": "Boolean",            "optional": false,            "field": "data.user.verified",            "description": "<p>Specify if the user is verified.</p>"          },          {            "group": "200 OK",            "type": "Boolean",            "optional": false,            "field": "data.user.following",            "description": "<p>Specify if the user is followed.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.user.real_name",            "description": "<p>Real name of the user.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.user.screen_name",            "description": "<p>Screen name of the user.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.user.screen_speciality",            "description": "<p>Screen speciality of the user.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.user.picture",            "description": "<p>Picture of the user (<code>null</code> if profile picture is not uploaded).</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.user.picture.url",            "description": "<p>Url of the profile picture.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.user.picture.width",            "description": "<p>Width of the profile picture.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.user.picture.height",            "description": "<p>Height of the profile picture.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.user.profession",            "description": "<p>Profession of the user.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.user.profession.id",            "description": "<p>Id number of the profession.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.user.profession.title",            "description": "<p>Title of the profession.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.user.speciality",            "description": "<p>Speciality of the user.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.user.speciality.id",            "description": "<p>Id number of the speciality.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.user.speciality.title",            "description": "<p>Title of the speciality.</p>"          },          {            "group": "200 OK",            "type": "Object[]",            "optional": false,            "field": "data.categories",            "description": "<p>List of categories.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.categories.id",            "description": "<p>Id number of the category.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.categories.title",            "description": "<p>Title of the category.</p>"          },          {            "group": "200 OK",            "type": "Object[]",            "optional": false,            "field": "data.images",            "description": "<p>List of images.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.images.thumbnail",            "description": "<p>Thumbnail image of the image.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.images.thumbnail.url",            "description": "<p>Url of the thumbnail image.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.images.thumbnail.width",            "description": "<p>Width of the thumbnail image.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.images.thumbnail.height",            "description": "<p>Height of the thumbnail image.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.images.preview",            "description": "<p>Preview image of the image.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.images.preview.url",            "description": "<p>Url of the preview image.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.images.preview.width",            "description": "<p>Width of the preview image.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.images.preview.height",            "description": "<p>Height of the preview image.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.images.full",            "description": "<p>Full image of the image.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "data.images.full.url",            "description": "<p>Url of the full image.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.images.full.width",            "description": "<p>Width of the full image.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.images.full.height",            "description": "<p>Height of the full image.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "data.counts",            "description": "<p>Counters of the media.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.counts.comments",            "description": "<p>Comment count of the media.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.counts.favorites",            "description": "<p>Favorite count of the media.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "data.counts.images",            "description": "<p>Image count of the media.</p>"          },          {            "group": "200 OK",            "type": "Date",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date and time of the media in <em>ISO 8601</em> format.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "meta",            "description": "<p>Pagination information.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "meta.total_count",            "description": "<p>Total number of the records.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "meta.page_count",            "description": "<p>Total number of the pages.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "meta.current_page",            "description": "<p>Current page number.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "meta.per_page",            "description": "<p>Number of the records per page.</p>"          }        ]      },      "examples": [        {          "title": "Example Response",          "content": "HTTP/1.1 200 OK\n{\n    \"data\": [\n        {\n            \"id\": 1,\n            \"type\": \"single\",\n            \"caption\": \"Örnek media.\",\n            \"favorited\": true,\n            \"public_id\": \"zwukbo4tdueug6svck1iek1uc1c-hy35\",\n            \"public_url\": \"https://app.medik.com/sharing/zwukbo4tdueug6svck1iek1uc1c-hy35\",\n            \"user\": {\n                \"id\": 1,\n                \"username\": \"hdogan\",\n                \"real_name\": \"Hidayet Doğan\",\n                \"screen_name\": \"Hidayet Doğan\",\n                \"screen_speciality\": \"Dermatoloji Hekimi\",\n                \"verified\": true,\n                \"following\": false,\n                \"picture\": {\n                    \"url\": \"https://api.example.com/uploads/profiles/zwukbo4tdueug6svck1iek1uc1c-hy35_150.jpg\",\n                    \"width\": 150,\n                    \"height\": 150\n                },\n                \"profession\": {\n                    \"id\": 1,\n                    \"title\": \"Hekim\"\n                },\n                \"speciality\": {\n                    \"id\": 10,\n                    \"title\": \"Dermatolog\"\n                }\n            },\n            \"categories\": [\n                {\n                    \"id\": 1,\n                    \"title\": \"Burun\"\n                },\n                {\n                    \"id\": 2,\n                    \"title\": \"Nefroloji\"\n                }\n            ],\n            \"images\": [\n                {\n                    \"thumbnail\": {\n                        \"url\": \"https://api.example.com/uploads/media/zwukbo4tdueug6svck1iek1uc1c-hy35_150.jpg\",\n                        \"width\": 150,\n                        \"height\": 150\n                    },\n                    \"preview\": {\n                        \"url\": \"https://api.example.com/uploads/media/zwukbo4tdueug6svck1iek1uc1c-hy35_300.jpg\",\n                        \"width\": 300,\n                        \"height\": 200\n                    },\n                    \"full\": {\n                        \"url\": \"https://api.example.com/uploads/media/zwukbo4tdueug6svck1iek1uc1c-hy35.jpg\",\n                        \"width\": 1024,\n                        \"height\": 700\n                    }\n                }\n            ],\n            \"counts\": {\n                \"comments\": 2,\n                \"favorites\": 1,\n                \"images\": 1\n            },\n            \"created_at\": \"2015-02-13T15:26:55+00:00\"\n        }\n    ],\n    \"meta\": {\n        \"total_count\": 1,\n        \"page_count\": 1,\n        \"current_page\": 1,\n        \"per_page\": 10\n    }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "401 Authorization Error": [          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "500 Server Error": [          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ]      }    }  },  {    "type": "post",    "url": "/users/:user_id/report",    "title": "Report an user",    "description": "<p><code>422 Data Validation Error</code> occurs if the user object does not exists.</p>",    "version": "0.0.1",    "group": "Users",    "name": "ReportUser",    "permission": [      {        "name": "User",        "title": "Authorized user.",        "description": "<p>Authorization can be done with using either <code>access_token</code> query string or <code>Authorization</code> header with <strong>Bearer</strong> token.</p>"      }    ],    "parameter": {      "fields": {        "Url Parameters": [          {            "group": "Url Parameters",            "type": "Integer",            "optional": false,            "field": "user_id",            "description": "<p>Id number of the user object.</p>"          }        ],        "Parameters": [          {            "group": "Parameters",            "type": "String",            "size": "..250",            "optional": false,            "field": "text",            "description": "<p>Text of the report object.</p>"          }        ]      }    },    "error": {      "examples": [        {          "title": "Example Validation Error Response",          "content": "HTTP/1.1 422 Data Validation Failed.\n[\n    {\n        \"message\": \"Report text cannot be left blank.\",\n        \"field\": \"text\"\n    }\n]",          "type": "json"        }      ],      "fields": {        "401 Authorization Error": [          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "422 Data Validation Error": [          {            "group": "422 Data Validation Error",            "type": "Object[]",            "optional": false,            "field": "error",            "description": "<p>Data validation error object.</p>"          },          {            "group": "422 Data Validation Error",            "type": "String",            "optional": false,            "field": "error.message",            "description": "<p>Message of the error.</p>"          },          {            "group": "422 Data Validation Error",            "type": "String",            "optional": false,            "field": "error.field",            "description": "<p>Field name of the error.</p>"          }        ],        "500 Server Error": [          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ]      }    },    "filename": "controllers/ReportController.php",    "groupTitle": "Users",    "success": {      "fields": {        "201 Created": [          {            "group": "201 Created",            "type": "Integer",            "optional": false,            "field": "id",            "description": "<p>Id number of the object.</p>"          },          {            "group": "201 Created",            "type": "Date",            "optional": false,            "field": "created_at",            "description": "<p>Creation date and time of the object in <em>ISO 8601</em> format.</p>"          }        ]      },      "examples": [        {          "title": "Example Response",          "content": "HTTP/1.1 201 Created\n{\n    \"id\": 1,\n    \"created_at\": \"2015-02-13T15:26:55+00:00\"\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/users/self/reset-password",    "title": "Send password reset request",    "version": "0.0.1",    "group": "Users",    "name": "ResetPasswordUser",    "permission": [      {        "name": "Client Credentials"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>E-Mail address.</p>"          }        ]      }    },    "filename": "controllers/UserController.php",    "groupTitle": "Users",    "success": {      "fields": {        "201 Created": [          {            "group": "201 Created",            "type": "Integer",            "optional": false,            "field": "id",            "description": "<p>Id number of the object.</p>"          },          {            "group": "201 Created",            "type": "Date",            "optional": false,            "field": "created_at",            "description": "<p>Creation date and time of the object in <em>ISO 8601</em> format.</p>"          }        ]      }    },    "error": {      "fields": {        "422 Data Validation Error": [          {            "group": "422 Data Validation Error",            "type": "Object[]",            "optional": false,            "field": "error",            "description": "<p>Data validation error object.</p>"          },          {            "group": "422 Data Validation Error",            "type": "String",            "optional": false,            "field": "error.message",            "description": "<p>Message of the error.</p>"          },          {            "group": "422 Data Validation Error",            "type": "String",            "optional": false,            "field": "error.field",            "description": "<p>Field name of the error.</p>"          }        ],        "500 Server Error": [          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ]      }    }  },  {    "type": "patch",    "url": "/users/self/settings",    "title": "Update settings",    "version": "0.0.1",    "group": "Users",    "name": "SettingsUser",    "permission": [      {        "name": "User",        "title": "Authorized user.",        "description": "<p>Authorization can be done with using either <code>access_token</code> query string or <code>Authorization</code> header with <strong>Bearer</strong> token.</p>"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "allowedValues": [              "application/x-www-form-urlencoded"            ],            "optional": true,            "field": "Content-Type",            "description": "<p>Required if method injection (POST method) is used.</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "allowedValues": [              "PUT"            ],            "optional": true,            "field": "_method",            "description": "<p>Used for the HTTP method injection. Required if method injection (POST method) is used.</p>"          },          {            "group": "Parameter",            "type": "boolean",            "optional": true,            "field": "notify_comments",            "description": "<p>Toggle notifications for new comments.</p>"          },          {            "group": "Parameter",            "type": "boolean",            "optional": true,            "field": "notify_favorites",            "description": "<p>Toggle notifications for new favorites.</p>"          },          {            "group": "Parameter",            "type": "boolean",            "optional": true,            "field": "notify_followers",            "description": "<p>Toggle notifications for new followers.</p>"          },          {            "group": "Parameter",            "type": "boolean",            "optional": true,            "field": "subscribe_monthly",            "description": "<p>Toggle subscription for monthly mailing.</p>"          },          {            "group": "Parameter",            "type": "boolean",            "optional": true,            "field": "subscribe_weekly",            "description": "<p>Toggle subscription for weekly mailing.</p>"          }        ]      }    },    "success": {      "fields": {        "200 OK": [          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "id",            "description": "<p>Id number of the user object.</p>"          },          {            "group": "200 OK",            "type": "Date",            "optional": false,            "field": "updated_at",            "description": "<p>Update date and time of the user object in <em>ISO 8601</em> format.</p>"          }        ]      },      "examples": [        {          "title": "Example Response",          "content": "HTTP/1.1 200 OK\n{\n    \"id\": 1,\n    \"updated_at\": \"2015-02-13T15:26:55+00:00\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Example Validation Error Response",          "content": "HTTP/1.1 422 Data Validation Failed.\n[\n    \"message\": \"notify_comments\",\n    \"field\": \"Yeni Yorum Bildirimleri 1 veya 0 olmalı.\"\n]",          "type": "json"        }      ],      "fields": {        "401 Authorization Error": [          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "422 Data Validation Error": [          {            "group": "422 Data Validation Error",            "type": "Object[]",            "optional": false,            "field": "error",            "description": "<p>Data validation error object.</p>"          },          {            "group": "422 Data Validation Error",            "type": "String",            "optional": false,            "field": "error.message",            "description": "<p>Message of the error.</p>"          },          {            "group": "422 Data Validation Error",            "type": "String",            "optional": false,            "field": "error.field",            "description": "<p>Field name of the error.</p>"          }        ],        "500 Server Error": [          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ]      }    },    "filename": "controllers/UserController.php",    "groupTitle": "Users"  },  {    "type": "patch",    "url": "/users/self",    "title": "Update an user",    "version": "0.0.1",    "group": "Users",    "name": "UpdateUser",    "permission": [      {        "name": "User",        "title": "Authorized user.",        "description": "<p>Authorization can be done with using either <code>access_token</code> query string or <code>Authorization</code> header with <strong>Bearer</strong> token.</p>"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "username",            "description": "<p>Username of the user object.</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "6..",            "optional": false,            "field": "password",            "description": "<p>New password of the user.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "email",            "description": "<p>E-Mail address of the user object.</p>"          },          {            "group": "Parameter",            "type": "Integer",            "optional": true,            "field": "speciality_id",            "description": "<p>Id number of the speciality.</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "6..50",            "optional": true,            "field": "real_name",            "description": "<p>Real name of the user object.</p>"          },          {            "group": "Parameter",            "type": "Integer",            "optional": true,            "field": "city_id",            "description": "<p>Id number of the city.</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "..250",            "optional": true,            "field": "bio",            "description": "<p>Biography information of the user object.</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "..250",            "optional": true,            "field": "institution",            "description": "<p>Institution of the user object.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "web",            "description": "<p>Web url of the user object.</p>"          }        ]      }    },    "success": {      "fields": {        "200 OK": [          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "id",            "description": "<p>Id number of the user object.</p>"          },          {            "group": "200 OK",            "type": "Date",            "optional": false,            "field": "updated_at",            "description": "<p>Update date and time of the user object in <em>ISO 8601</em> format.</p>"          }        ]      },      "examples": [        {          "title": "Example Response",          "content": "HTTP/1.1 200 OK\n{\n    \"id\": 1,\n    \"updated_at\": \"2015-02-13T15:26:55+00:00\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Example Validation Error Response",          "content": "HTTP/1.1 422 Data Validation Failed.\n[\n    \"message\": \"email\",\n    \"field\": \"Geçersiz e-posta adresi.\"\n]",          "type": "json"        }      ],      "fields": {        "401 Authorization Error": [          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "422 Data Validation Error": [          {            "group": "422 Data Validation Error",            "type": "Object[]",            "optional": false,            "field": "error",            "description": "<p>Data validation error object.</p>"          },          {            "group": "422 Data Validation Error",            "type": "String",            "optional": false,            "field": "error.message",            "description": "<p>Message of the error.</p>"          },          {            "group": "422 Data Validation Error",            "type": "String",            "optional": false,            "field": "error.field",            "description": "<p>Field name of the error.</p>"          }        ],        "500 Server Error": [          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ]      }    },    "filename": "controllers/UserController.php",    "groupTitle": "Users"  },  {    "type": "get",    "url": "/users/:id",    "title": "Get information about an user",    "version": "0.0.1",    "group": "Users",    "name": "ViewUser",    "permission": [      {        "name": "User",        "title": "Authorized user.",        "description": "<p>Authorization can be done with using either <code>access_token</code> query string or <code>Authorization</code> header with <strong>Bearer</strong> token.</p>"      }    ],    "parameter": {      "fields": {        "Url Parameters": [          {            "group": "Url Parameters",            "type": "Integer",            "optional": false,            "field": "id",            "description": "<p>Id number of the user object.</p>"          }        ]      }    },    "success": {      "fields": {        "200 OK": [          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "id",            "description": "<p>Id number of the user object.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>Username of the user object.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>E-Mail address of the user.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "profession",            "description": "<p>Profession of the user object.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "profession.id",            "description": "<p>Id number of the profession.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "profession.title",            "description": "<p>Title of the profession.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "speciality",            "description": "<p>Speciality of the user object.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "speciality.id",            "description": "<p>Id number of the speciality.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "speciality.title",            "description": "<p>Title of the speciality.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "real_name",            "description": "<p>Real name of the user object.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "screen_name",            "description": "<p>Screen name of the user object.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "city",            "description": "<p>City of the user object.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "city.id",            "description": "<p>Id number of the city.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "city.title",            "description": "<p>Title of the city.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "bio",            "description": "<p>Biography information of the user object.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "institution",            "description": "<p>Institution of the user object.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "web",            "description": "<p>Web url of the user object.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "picture",            "description": "<p>Picture of the user object.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "picture.url",            "description": "<p>Url of the picture.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "picture.width",            "description": "<p>Width of the picture.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "picture.height",            "description": "<p>Height of the picture.</p>"          },          {            "group": "200 OK",            "type": "Boolean",            "optional": false,            "field": "verified",            "description": "<p>Specify if the user object is verified.</p>"          },          {            "group": "200 OK",            "type": "Boolean",            "optional": false,            "field": "following",            "description": "<p>Specify if the user object is followed by the authorized user.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "counts",            "description": "<p>Counters of the user object.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "counts.comments",            "description": "<p>Comment count of the user object.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "counts.favorites",            "description": "<p>Favorite count of the user object.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "counts.followers",            "description": "<p>Follower count of the user object.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "counts.following",            "description": "<p>Following count of the user object.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "counts.media",            "description": "<p>Media count of the user object.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "notifications",            "description": "<p>Notification settings of the user object.</p>"          },          {            "group": "200 OK",            "type": "Boolean",            "optional": false,            "field": "notifications.comments",            "description": "<p>Specify if the user object is enabled comments notifications.</p>"          },          {            "group": "200 OK",            "type": "Boolean",            "optional": false,            "field": "notifications.favorites",            "description": "<p>Specify if the user object is enabled favorites notifications.</p>"          },          {            "group": "200 OK",            "type": "Boolean",            "optional": false,            "field": "notifications.followers",            "description": "<p>Specify if the user object is enabled followers notifications.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "subscriptions",            "description": "<p>Subscription settings of the user object.</p>"          },          {            "group": "200 OK",            "type": "Boolean",            "optional": false,            "field": "subscriptions.monthly",            "description": "<p>Specify if the user object is subscribed monthly mailing.</p>"          },          {            "group": "200 OK",            "type": "Boolean",            "optional": false,            "field": "subscriptions.weekly",            "description": "<p>Specify if the user object is subscribed weekly mailing.</p>"          },          {            "group": "200 OK",            "type": "Date",            "optional": false,            "field": "created_at",            "description": "<p>Creation date and time of the user object in <em>ISO 8601</em> format.</p>"          }        ]      },      "examples": [        {          "title": "ExampleResponse",          "content": "HTTP/1.1 200 OK\n{\n    \"id\": 1,\n    \"username\": \"hdogan\",\n    \"email\": \"hdogan@gmail.com\",\n    \"profession\": {\n        \"id\": 1,\n        \"title\": \"Hekim\"\n    },\n    \"speciality\": {\n        \"id\": 1,\n        \"title\": \"Acil Tıp\"\n    },\n    \"real_name\": \"\",\n    \"screen_name\": \"hdogan\",\n    \"city\": {\n        \"id\": 6,\n        \"title\": \"Ankara\"\n    },\n    \"bio\": \"\",\n    \"institution\": \"Yazılım Parkı\",\n    \"web\": \"http://www.yazilimparki.com.tr\",\n    \"picture\": {\n        \"url\": \"https://api.example.com/uploads/profiles/zwukbo4tdueug6svck1iek1uc1c-hy35_150.jpg\",\n        \"width\": 150,\n        \"height\": 150\n    },\n    \"verified\": true,\n    \"following\": false,\n    \"counts\": {\n        \"comments\": 2,\n        \"favorites\": 1,\n        \"followers\": 0,\n        \"following\": 1,\n        \"media\": 2\n    },\n    \"notifications\": {\n        \"comments\": true,\n        \"favorites\": true,\n        \"followers\": true\n    },\n    \"subscriptions\": {\n        \"monthly\": false,\n        \"weekly\": true\n    },\n    \"created_at\": \"2015-02-13T15:26:55+00:00\"\n}",          "type": "json"        }      ]    },    "filename": "controllers/UserController.php",    "groupTitle": "Users",    "error": {      "fields": {        "401 Authorization Error": [          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "404 Not Found": [          {            "group": "404 Not Found",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "404 Not Found",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "404 Not Found",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "404 Not Found",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "500 Server Error": [          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/users/self",    "title": "Get information about an authenticated user",    "version": "0.0.1",    "group": "Users",    "name": "ViewUserSelf",    "permission": [      {        "name": "User",        "title": "Authorized user.",        "description": "<p>Authorization can be done with using either <code>access_token</code> query string or <code>Authorization</code> header with <strong>Bearer</strong> token.</p>"      }    ],    "success": {      "fields": {        "200 OK": [          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "id",            "description": "<p>Id number of the user object.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>Username of the user object.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>E-Mail address of the user.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "profession",            "description": "<p>Profession of the user object.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "profession.id",            "description": "<p>Id number of the profession.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "profession.title",            "description": "<p>Title of the profession.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "speciality",            "description": "<p>Speciality of the user object.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "speciality.id",            "description": "<p>Id number of the speciality.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "speciality.title",            "description": "<p>Title of the speciality.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "real_name",            "description": "<p>Real name of the user object.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "screen_name",            "description": "<p>Screen name of the user object.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "city",            "description": "<p>City of the user object.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "city.id",            "description": "<p>Id number of the city.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "city.title",            "description": "<p>Title of the city.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "bio",            "description": "<p>Biography information of the user object.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "institution",            "description": "<p>Institution of the user object.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "web",            "description": "<p>Web url of the user object.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "picture",            "description": "<p>Picture of the user object.</p>"          },          {            "group": "200 OK",            "type": "String",            "optional": false,            "field": "picture.url",            "description": "<p>Url of the picture.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "picture.width",            "description": "<p>Width of the picture.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "picture.height",            "description": "<p>Height of the picture.</p>"          },          {            "group": "200 OK",            "type": "Boolean",            "optional": false,            "field": "verified",            "description": "<p>Specify if the user object is verified.</p>"          },          {            "group": "200 OK",            "type": "Boolean",            "optional": false,            "field": "can_verify",            "description": "<p>Specify if the user verify himself/herself.</p>"          },          {            "group": "200 OK",            "type": "Boolean",            "optional": false,            "field": "can_send_media",            "description": "<p>Specify if the user can send media.</p>"          },          {            "group": "200 OK",            "type": "Boolean",            "optional": false,            "field": "following",            "description": "<p>Specify if the user object is followed by the authorized user.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "counts",            "description": "<p>Counters of the user object.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "counts.comments",            "description": "<p>Comment count of the user object.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "counts.favorites",            "description": "<p>Favorite count of the user object.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "counts.followers",            "description": "<p>Follower count of the user object.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "counts.following",            "description": "<p>Following count of the user object.</p>"          },          {            "group": "200 OK",            "type": "Integer",            "optional": false,            "field": "counts.media",            "description": "<p>Media count of the user object.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "notifications",            "description": "<p>Notification settings of the user object.</p>"          },          {            "group": "200 OK",            "type": "Boolean",            "optional": false,            "field": "notifications.comments",            "description": "<p>Specify if the user object is enabled comments notifications.</p>"          },          {            "group": "200 OK",            "type": "Boolean",            "optional": false,            "field": "notifications.favorites",            "description": "<p>Specify if the user object is enabled favorites notifications.</p>"          },          {            "group": "200 OK",            "type": "Boolean",            "optional": false,            "field": "notifications.followers",            "description": "<p>Specify if the user object is enabled followers notifications.</p>"          },          {            "group": "200 OK",            "type": "Object",            "optional": false,            "field": "subscriptions",            "description": "<p>Subscription settings of the user object.</p>"          },          {            "group": "200 OK",            "type": "Boolean",            "optional": false,            "field": "subscriptions.monthly",            "description": "<p>Specify if the user object is subscribed monthly mailing.</p>"          },          {            "group": "200 OK",            "type": "Boolean",            "optional": false,            "field": "subscriptions.weekly",            "description": "<p>Specify if the user object is subscribed weekly mailing.</p>"          },          {            "group": "200 OK",            "type": "Date",            "optional": false,            "field": "created_at",            "description": "<p>Creation date and time of the user object in <em>ISO 8601</em> format.</p>"          }        ]      },      "examples": [        {          "title": "ExampleResponse",          "content": "HTTP/1.1 200 OK\n{\n    \"id\": 1,\n    \"username\": \"hdogan\",\n    \"email\": \"hdogan@gmail.com\",\n    \"profession\": {\n        \"id\": 1,\n        \"title\": \"Hekim\"\n    },\n    \"speciality\": {\n        \"id\": 1,\n        \"title\": \"Acil Tıp\"\n    },\n    \"real_name\": \"\",\n    \"screen_name\": \"hdogan\",\n    \"city\": {\n        \"id\": 6,\n        \"title\": \"Ankara\"\n    },\n    \"bio\": \"\",\n    \"institution\": \"Yazılım Parkı\",\n    \"web\": \"http://www.yazilimparki.com.tr\",\n    \"picture\": {\n        \"url\": \"https://api.example.com/uploads/profiles/zwukbo4tdueug6svck1iek1uc1c-hy35_150.jpg\",\n        \"width\": 150,\n        \"height\": 150\n    },\n    \"verified\": true,\n    \"following\": false,\n    \"counts\": {\n        \"comments\": 2,\n        \"favorites\": 1,\n        \"followers\": 0,\n        \"following\": 1,\n        \"media\": 2\n    },\n    \"notifications\": {\n        \"comments\": true,\n        \"favorites\": true,\n        \"followers\": true\n    },\n    \"subscriptions\": {\n        \"monthly\": false,\n        \"weekly\": true\n    },\n    \"created_at\": \"2015-02-13T15:26:55+00:00\"\n}",          "type": "json"        }      ]    },    "filename": "controllers/UserController.php",    "groupTitle": "Users",    "error": {      "fields": {        "401 Authorization Error": [          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "401 Authorization Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "404 Not Found": [          {            "group": "404 Not Found",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "404 Not Found",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "404 Not Found",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "404 Not Found",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ],        "500 Server Error": [          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "status",            "description": "<p>Status (response) code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "Integer",            "optional": false,            "field": "code",            "description": "<p>Code of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message of the error.</p>"          },          {            "group": "500 Server Error",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the error.</p>"          }        ]      }    }  }] });
